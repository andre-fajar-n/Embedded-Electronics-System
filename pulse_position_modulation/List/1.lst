
AVRASM ver. 2.1.30  D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm Tue Jun 05 20:49:39 2018

D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1090): warning: Register r6 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1091): warning: Register r7 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1093): warning: Register r9 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1094): warning: Register r10 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1095): warning: Register r11 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1096): warning: Register r12 already defined by the .DEF directive
D:\Kuliah\Mata Kuliah\Sistem Elektronika Tertanam\FP\List\1.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _waktu_on=R4
                 	.DEF _waktu_on_msb=R5
                 	.DEF _header_start=R6
                 	.DEF _header_start_msb=R7
                 	.DEF _header_stop=R8
                 	.DEF _header_stop_msb=R9
                 	.DEF _i=R10
                 	.DEF _i_msb=R11
                 	.DEF _waktu_ke=R12
                 	.DEF _waktu_ke_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 007a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 02bb 	JMP  _timer1_compa_isr
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0960
000034 1f40      	.DB  0x60,0x9,0x40,0x1F
                 
                 _0x0:
000035 6553
000036 7672
000037 206f
000038 3a31      	.DB  0x53,0x65,0x72,0x76,0x6F,0x20,0x31,0x3A
000039 2520
00003a 6433
00003b 5300
00003c 7265      	.DB  0x20,0x25,0x33,0x64,0x0,0x53,0x65,0x72
00003d 6f76
00003e 3220
00003f 203a
000040 3325      	.DB  0x76,0x6F,0x20,0x32,0x3A,0x20,0x25,0x33
000041 0064
000042 6553
000043 7672
000044 206f      	.DB  0x64,0x0,0x53,0x65,0x72,0x76,0x6F,0x20
000045 3a33
000046 2520
000047 6433
000048 5300      	.DB  0x33,0x3A,0x20,0x25,0x33,0x64,0x0,0x53
000049 7265
00004a 6f76
00004b 3420
00004c 203a      	.DB  0x65,0x72,0x76,0x6F,0x20,0x34,0x3A,0x20
00004d 3325
00004e 0064
00004f 6553
000050 7672      	.DB  0x25,0x33,0x64,0x0,0x53,0x65,0x72,0x76
000051 206f
000052 3a35
000053 2520
000054 6433      	.DB  0x6F,0x20,0x35,0x3A,0x20,0x25,0x33,0x64
000055 5300
000056 7265
000057 6f76
000058 3620      	.DB  0x0,0x53,0x65,0x72,0x76,0x6F,0x20,0x36
000059 203a
00005a 3325
00005b 0064
00005c 6553      	.DB  0x3A,0x20,0x25,0x33,0x64,0x0,0x53,0x65
00005d 7672
00005e 206f
00005f 3a37
000060 2520      	.DB  0x72,0x76,0x6F,0x20,0x37,0x3A,0x20,0x25
000061 6433
000062 5300
000063 7265
000064 6f76      	.DB  0x33,0x64,0x0,0x53,0x65,0x72,0x76,0x6F
000065 3820
000066 203a
000067 3325
000068 0064      	.DB  0x20,0x38,0x3A,0x20,0x25,0x33,0x64,0x0
000069 654d
00006a 676e
00006b 7269
00006c 6d69      	.DB  0x4D,0x65,0x6E,0x67,0x69,0x72,0x69,0x6D
00006d 2e2e
00006e 002e      	.DB  0x2E,0x2E,0x2E,0x0
                 _0x2000003:
00006f c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000070 0004      	.DW  0x04
000071 0004      	.DW  0x04
000072 0066      	.DW  __REG_VARS*2
                 
000073 000c      	.DW  0x0C
000074 0160      	.DW  _0x40
000075 00d2      	.DW  _0x0*2+104
                 
000076 0002      	.DW  0x02
000077 019c      	.DW  __base_y_G100
000078 00de      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000079 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00007a 94f8      	CLI
00007b 27ee      	CLR  R30
00007c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00007d e0f1      	LDI  R31,1
00007e bffb      	OUT  GICR,R31
00007f bfeb      	OUT  GICR,R30
000080 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000081 e1f8      	LDI  R31,0x18
000082 bdf1      	OUT  WDTCR,R31
000083 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000084 e08d      	LDI  R24,(14-2)+1
000085 e0a2      	LDI  R26,2
000086 27bb      	CLR  R27
                 __CLEAR_REG:
000087 93ed      	ST   X+,R30
000088 958a      	DEC  R24
000089 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00008a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00008c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00008d 93ed      	ST   X+,R30
00008e 9701      	SBIW R24,1
00008f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000090 eee0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000091 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000092 9185      	LPM  R24,Z+
000093 9195      	LPM  R25,Z+
000094 9700      	SBIW R24,0
000095 f061      	BREQ __GLOBAL_INI_END
000096 91a5      	LPM  R26,Z+
000097 91b5      	LPM  R27,Z+
000098 9005      	LPM  R0,Z+
000099 9015      	LPM  R1,Z+
00009a 01bf      	MOVW R22,R30
00009b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00009c 9005      	LPM  R0,Z+
00009d 920d      	ST   X+,R0
00009e 9701      	SBIW R24,1
00009f f7e1      	BRNE __GLOBAL_INI_LOOP
0000a0 01fb      	MOVW R30,R22
0000a1 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a2 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a3 bfed      	OUT  SPL,R30
0000a4 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a6 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a7 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a8 940c 044b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define high 0
                 ;#define low 1
                 ;
                 ;#define baris1 PORTC.3
                 ;#define baris2 PORTC.2
                 ;#define baris3 PORTC.1
                 ;#define baris4 PORTC.0
                 ;#define kolom1 PINC.7
                 ;#define kolom2 PINC.6
                 ;#define kolom3 PINC.5
                 ;#define kolom4 PINC.4
                 ;
                 ;#define baris1_on PORTC.3=1
                 ;#define baris2_on PORTC.2=1
                 ;#define baris3_on PORTC.1=1
                 ;#define baris4_on PORTC.0=1
                 ;#define baris1_off PORTC.3=0
                 ;#define baris2_off PORTC.2=0
                 ;#define baris3_off PORTC.1=0
                 ;#define baris4_off PORTC.0=0
                 ;
                 ;unsigned int waktu_on = 2400, header_start=8000, header_stop;
                 ;int sudut_servo[8],ocr_servo[8], i;
                 ;int waktu_ke;
                 ;char tampil[16];
                 ;
                 ;unsigned int sudut2ocr(unsigned int sudut_x){
                 ; 0000 0020 unsigned int sudut2ocr(unsigned int sudut_x){
                 
                 	.CSEG
                 _sudut2ocr:
                 ; .FSTART _sudut2ocr
                 ; 0000 0021     int duty_ocr;
                 ; 0000 0022     duty_ocr=sudut_x*44.444444444+8000;
0000aa 93ba      	ST   -Y,R27
0000ab 93aa      	ST   -Y,R26
0000ac 931a      	ST   -Y,R17
0000ad 930a      	ST   -Y,R16
                 ;	sudut_x -> Y+2
                 ;	duty_ocr -> R16,R17
0000ae 81ea      	LDD  R30,Y+2
0000af 81fb      	LDD  R31,Y+2+1
0000b0 2766      	CLR  R22
0000b1 2777      	CLR  R23
0000b2 940e 0962 	CALL __CDF1
                +
0000b4 e1ac     +LDI R26 , LOW ( 0x4231C71C )
0000b5 ecb7     +LDI R27 , HIGH ( 0x4231C71C )
0000b6 e381     +LDI R24 , BYTE3 ( 0x4231C71C )
0000b7 e492     +LDI R25 , BYTE4 ( 0x4231C71C )
                 	__GETD2N 0x4231C71C
0000b8 940e 09e5 	CALL __MULF12
                +
0000ba e0a0     +LDI R26 , LOW ( 0x45FA0000 )
0000bb e0b0     +LDI R27 , HIGH ( 0x45FA0000 )
0000bc ef8a     +LDI R24 , BYTE3 ( 0x45FA0000 )
0000bd e495     +LDI R25 , BYTE4 ( 0x45FA0000 )
                 	__GETD2N 0x45FA0000
0000be 940e 0995 	CALL __ADDF12
0000c0 940e 092b 	CALL __CFD1
0000c2 018f      	MOVW R16,R30
                 ; 0000 0023     return duty_ocr;
0000c3 8119      	LDD  R17,Y+1
0000c4 8108      	LDD  R16,Y+0
0000c5 9624      	ADIW R28,4
0000c6 9508      	RET
                 ; 0000 0024 }
                 ; .FEND
                 ;
                 ;void input_keypad_loop(){
                 ; 0000 0026 void input_keypad_loop(){
                 _input_keypad_loop:
                 ; .FSTART _input_keypad_loop
                 ; 0000 0027     for(i=0;i<4;i++){
0000c7 24aa      	CLR  R10
0000c8 24bb      	CLR  R11
                 _0x4:
0000c9 e0e4      	LDI  R30,LOW(4)
0000ca e0f0      	LDI  R31,HIGH(4)
0000cb 16ae      	CP   R10,R30
0000cc 06bf      	CPC  R11,R31
0000cd f00c      	BRLT PC+2
0000ce c1eb      	RJMP _0x5
                 ; 0000 0028         PORTC=0xF0;
0000cf efe0      	LDI  R30,LOW(240)
0000d0 bbe5      	OUT  0x15,R30
                 ; 0000 0029         if(i==0)PORTC=7;//0b11110111;
0000d1 2c0a      	MOV  R0,R10
0000d2 280b      	OR   R0,R11
0000d3 f411      	BRNE _0x6
0000d4 e0e7      	LDI  R30,LOW(7)
0000d5 c00e      	RJMP _0x7E
                 ; 0000 002A         else if(i==1)PORTC=11;//0b11111011;
                 _0x6:
0000d6 940e 071a 	CALL SUBOPT_0x0
0000d8 f411      	BRNE _0x8
0000d9 e0eb      	LDI  R30,LOW(11)
0000da c009      	RJMP _0x7E
                 ; 0000 002B         else if(i==2)PORTC=13;//0b11111101;
                 _0x8:
0000db 940e 071f 	CALL SUBOPT_0x1
0000dd f411      	BRNE _0xA
0000de e0ed      	LDI  R30,LOW(13)
0000df c004      	RJMP _0x7E
                 ; 0000 002C         else if(i==3)PORTC=14;//0b11111110;
                 _0xA:
0000e0 940e 0724 	CALL SUBOPT_0x2
0000e2 f411      	BRNE _0xC
0000e3 e0ee      	LDI  R30,LOW(14)
                 _0x7E:
0000e4 bbe5      	OUT  0x15,R30
                 ; 0000 002D         if(kolom1==0){
                 _0xC:
0000e5 999f      	SBIC 0x13,7
0000e6 c05f      	RJMP _0xD
                 ; 0000 002E             lcd_clear();
0000e7 940e 04ea 	CALL _lcd_clear
                 ; 0000 002F             while(kolom1==0){
                 _0xE:
0000e9 999f      	SBIC 0x13,7
0000ea c05a      	RJMP _0x10
                 ; 0000 0030             lcd_gotoxy(0,0);
0000eb 940e 0729 	CALL SUBOPT_0x3
                 ; 0000 0031             if(i==0){
0000ed f491      	BRNE _0x11
                 ; 0000 0032                 sudut_servo[0]+=1;
0000ee 940e 0731 	CALL SUBOPT_0x4
0000f0 9631      	ADIW R30,1
0000f1 940e 0736 	CALL SUBOPT_0x5
                 ; 0000 0033                 if(sudut_servo[0]>180)sudut_servo[0]=0;
0000f3 940e 073b 	CALL SUBOPT_0x6
0000f5 3ba5      	CPI  R26,LOW(0xB5)
0000f6 e0e0      	LDI  R30,HIGH(0xB5)
0000f7 07be      	CPC  R27,R30
0000f8 f02c      	BRLT _0x12
0000f9 e0e0      	LDI  R30,LOW(0)
0000fa 93e0 016c 	STS  _sudut_servo,R30
0000fc 93e0 016d 	STS  _sudut_servo+1,R30
                 ; 0000 0034                 sprintf(tampil,"Servo 1: %3d",sudut_servo[0]);
                 _0x12:
0000fe 940e 0740 	CALL SUBOPT_0x7
                 ; 0000 0035                 ocr_servo[0]=sudut2ocr(sudut_servo[0]);
                 ; 0000 0036             }
                 ; 0000 0037             if(i==1){
                 _0x11:
000100 940e 071a 	CALL SUBOPT_0x0
000102 f479      	BRNE _0x13
                 ; 0000 0038                 sudut_servo[0]-=1;
000103 940e 0731 	CALL SUBOPT_0x4
000105 9731      	SBIW R30,1
000106 940e 0736 	CALL SUBOPT_0x5
                 ; 0000 0039                 if(sudut_servo[0]<0)sudut_servo[0]=180;
000108 91a0 016d 	LDS  R26,_sudut_servo+1
00010a 23aa      	TST  R26
00010b f422      	BRPL _0x14
00010c ebe4      	LDI  R30,LOW(180)
00010d e0f0      	LDI  R31,HIGH(180)
00010e 940e 0736 	CALL SUBOPT_0x5
                 ; 0000 003A                 sprintf(tampil,"Servo 1: %3d",sudut_servo[0]);
                 _0x14:
000110 940e 0740 	CALL SUBOPT_0x7
                 ; 0000 003B                 ocr_servo[0]=sudut2ocr(sudut_servo[0]);
                 ; 0000 003C             }
                 ; 0000 003D             if(i==2){
                 _0x13:
000112 940e 071f 	CALL SUBOPT_0x1
000114 f4a9      	BRNE _0x15
                 ; 0000 003E                 sudut_servo[1]+=1;
000115 940e 0759 	CALL SUBOPT_0x8
000117 9631      	ADIW R30,1
                +
000118 93e0 016e+STS _sudut_servo + ( 2 ) , R30
00011a 93f0 016f+STS _sudut_servo + ( 2 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,2
                 ; 0000 003F                 if(sudut_servo[1]>180)sudut_servo[1]=0;
00011c 940e 075e 	CALL SUBOPT_0x9
00011e 3ba5      	CPI  R26,LOW(0xB5)
00011f e0e0      	LDI  R30,HIGH(0xB5)
000120 07be      	CPC  R27,R30
000121 f014      	BRLT _0x16
000122 940e 0763 	CALL SUBOPT_0xA
                 ; 0000 0040                 sprintf(tampil,"Servo 2: %3d",sudut_servo[1]);
                 _0x16:
000124 940e 076a 	CALL SUBOPT_0xB
000126 940e 0773 	CALL SUBOPT_0xC
                 ; 0000 0041                 ocr_servo[1]=sudut2ocr(sudut_servo[1]);
000128 940e 077c 	CALL SUBOPT_0xD
                 ; 0000 0042             }
                 ; 0000 0043             if(i==3){
                 _0x15:
00012a 940e 0724 	CALL SUBOPT_0x2
00012c f4a9      	BRNE _0x17
                 ; 0000 0044                 sudut_servo[1]-=1;
00012d 940e 0759 	CALL SUBOPT_0x8
00012f 9731      	SBIW R30,1
                +
000130 93e0 016e+STS _sudut_servo + ( 2 ) , R30
000132 93f0 016f+STS _sudut_servo + ( 2 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,2
                 ; 0000 0045                 if(sudut_servo[1]<0)sudut_servo[1]=180;
                +
000134 91a0 016f+LDS R26 , _sudut_servo + ( 3 )
                 	__GETB2MN _sudut_servo,3
000136 23aa      	TST  R26
000137 f422      	BRPL _0x18
                +
000138 e6ee     +LDI R30 , LOW ( _sudut_servo + ( 2 ) )
000139 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 2 ) )
                 	__POINTW1MN _sudut_servo,2
00013a 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 0046                 sprintf(tampil,"Servo 2: %3d",sudut_servo[1]);
                 _0x18:
00013c 940e 076a 	CALL SUBOPT_0xB
00013e 940e 0773 	CALL SUBOPT_0xC
                 ; 0000 0047                 ocr_servo[1]=sudut2ocr(sudut_servo[1]);
000140 940e 077c 	CALL SUBOPT_0xD
                 ; 0000 0048             }
                 ; 0000 0049             lcd_puts(tampil);
                 _0x17:
000142 940e 0788 	CALL SUBOPT_0xF
                 ; 0000 004A             lcd_gotoxy(12,0);
                 ; 0000 004B             lcd_putchar(0xDF);
                 ; 0000 004C             delay_ms(100);
                 ; 0000 004D             }
000144 cfa4      	RJMP _0xE
                 _0x10:
                 ; 0000 004E         }
                 ; 0000 004F         else if(kolom2==0){
000145 c13d      	RJMP _0x19
                 _0xD:
000146 999e      	SBIC 0x13,6
000147 c068      	RJMP _0x1A
                 ; 0000 0050             lcd_clear();
000148 940e 04ea 	CALL _lcd_clear
                 ; 0000 0051             while(kolom2==0){
                 _0x1B:
00014a 999e      	SBIC 0x13,6
00014b c063      	RJMP _0x1D
                 ; 0000 0052             lcd_gotoxy(0,0);
00014c 940e 0729 	CALL SUBOPT_0x3
                 ; 0000 0053             if(i==0){
00014e f4a9      	BRNE _0x1E
                 ; 0000 0054                 sudut_servo[2]+=1;
00014f 940e 0798 	CALL SUBOPT_0x10
000151 9631      	ADIW R30,1
                +
000152 93e0 0170+STS _sudut_servo + ( 4 ) , R30
000154 93f0 0171+STS _sudut_servo + ( 4 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,4
                 ; 0000 0055                 if(sudut_servo[2]>180)sudut_servo[2]=0;
000156 940e 079d 	CALL SUBOPT_0x11
000158 3ba5      	CPI  R26,LOW(0xB5)
000159 e0e0      	LDI  R30,HIGH(0xB5)
00015a 07be      	CPC  R27,R30
00015b f014      	BRLT _0x1F
00015c 940e 07a2 	CALL SUBOPT_0x12
                 ; 0000 0056                 sprintf(tampil,"Servo 3: %3d",sudut_servo[2]);
                 _0x1F:
00015e 940e 07a9 	CALL SUBOPT_0x13
000160 940e 07b2 	CALL SUBOPT_0x14
                 ; 0000 0057                 ocr_servo[2]=sudut2ocr(sudut_servo[2]);
000162 940e 07bb 	CALL SUBOPT_0x15
                 ; 0000 0058             }
                 ; 0000 0059             if(i==1){
                 _0x1E:
000164 940e 071a 	CALL SUBOPT_0x0
000166 f4a9      	BRNE _0x20
                 ; 0000 005A                 sudut_servo[2]-=1;
000167 940e 0798 	CALL SUBOPT_0x10
000169 9731      	SBIW R30,1
                +
00016a 93e0 0170+STS _sudut_servo + ( 4 ) , R30
00016c 93f0 0171+STS _sudut_servo + ( 4 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,4
                 ; 0000 005B                 if(sudut_servo[2]<0)sudut_servo[2]=180;
                +
00016e 91a0 0171+LDS R26 , _sudut_servo + ( 5 )
                 	__GETB2MN _sudut_servo,5
000170 23aa      	TST  R26
000171 f422      	BRPL _0x21
                +
000172 e7e0     +LDI R30 , LOW ( _sudut_servo + ( 4 ) )
000173 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 4 ) )
                 	__POINTW1MN _sudut_servo,4
000174 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 005C                 sprintf(tampil,"Servo 3: %3d",sudut_servo[2]);
                 _0x21:
000176 940e 07a9 	CALL SUBOPT_0x13
000178 940e 07b2 	CALL SUBOPT_0x14
                 ; 0000 005D                 ocr_servo[2]=sudut2ocr(sudut_servo[2]);
00017a 940e 07bb 	CALL SUBOPT_0x15
                 ; 0000 005E             }
                 ; 0000 005F             if(i==2){
                 _0x20:
00017c 940e 071f 	CALL SUBOPT_0x1
00017e f4a9      	BRNE _0x22
                 ; 0000 0060                 sudut_servo[3]+=1;
00017f 940e 07c2 	CALL SUBOPT_0x16
000181 9631      	ADIW R30,1
                +
000182 93e0 0172+STS _sudut_servo + ( 6 ) , R30
000184 93f0 0173+STS _sudut_servo + ( 6 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,6
                 ; 0000 0061                 if(sudut_servo[3]>180)sudut_servo[3]=0;
000186 940e 07c7 	CALL SUBOPT_0x17
000188 3ba5      	CPI  R26,LOW(0xB5)
000189 e0e0      	LDI  R30,HIGH(0xB5)
00018a 07be      	CPC  R27,R30
00018b f014      	BRLT _0x23
00018c 940e 07cc 	CALL SUBOPT_0x18
                 ; 0000 0062                 sprintf(tampil,"Servo 4: %3d",sudut_servo[3]);
                 _0x23:
00018e 940e 07d3 	CALL SUBOPT_0x19
000190 940e 07dc 	CALL SUBOPT_0x1A
                 ; 0000 0063                 ocr_servo[3]=sudut2ocr(sudut_servo[3]);
000192 940e 07e5 	CALL SUBOPT_0x1B
                 ; 0000 0064             }
                 ; 0000 0065             if(i==3){
                 _0x22:
000194 940e 0724 	CALL SUBOPT_0x2
000196 f4a9      	BRNE _0x24
                 ; 0000 0066                 sudut_servo[3]-=1;
000197 940e 07c2 	CALL SUBOPT_0x16
000199 9731      	SBIW R30,1
                +
00019a 93e0 0172+STS _sudut_servo + ( 6 ) , R30
00019c 93f0 0173+STS _sudut_servo + ( 6 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,6
                 ; 0000 0067                 if(sudut_servo[3]<0)sudut_servo[3]=180;
                +
00019e 91a0 0173+LDS R26 , _sudut_servo + ( 7 )
                 	__GETB2MN _sudut_servo,7
0001a0 23aa      	TST  R26
0001a1 f422      	BRPL _0x25
                +
0001a2 e7e2     +LDI R30 , LOW ( _sudut_servo + ( 6 ) )
0001a3 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 6 ) )
                 	__POINTW1MN _sudut_servo,6
0001a4 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 0068                 sprintf(tampil,"Servo 4: %3d",sudut_servo[3]);
                 _0x25:
0001a6 940e 07d3 	CALL SUBOPT_0x19
0001a8 940e 07dc 	CALL SUBOPT_0x1A
                 ; 0000 0069                 ocr_servo[3]=sudut2ocr(sudut_servo[3]);
0001aa 940e 07e5 	CALL SUBOPT_0x1B
                 ; 0000 006A             }
                 ; 0000 006B             lcd_puts(tampil);
                 _0x24:
0001ac 940e 0788 	CALL SUBOPT_0xF
                 ; 0000 006C             lcd_gotoxy(12,0);
                 ; 0000 006D             lcd_putchar(0xDF);
                 ; 0000 006E             delay_ms(100);
                 ; 0000 006F             }
0001ae cf9b      	RJMP _0x1B
                 _0x1D:
                 ; 0000 0070         }
                 ; 0000 0071         else if(kolom3==0){
0001af c0d3      	RJMP _0x26
                 _0x1A:
0001b0 999d      	SBIC 0x13,5
0001b1 c068      	RJMP _0x27
                 ; 0000 0072             lcd_clear();
0001b2 940e 04ea 	CALL _lcd_clear
                 ; 0000 0073             while(kolom3==0){
                 _0x28:
0001b4 999d      	SBIC 0x13,5
0001b5 c063      	RJMP _0x2A
                 ; 0000 0074             lcd_gotoxy(0,0);
0001b6 940e 0729 	CALL SUBOPT_0x3
                 ; 0000 0075             if(i==0){
0001b8 f4a9      	BRNE _0x2B
                 ; 0000 0076                 sudut_servo[4]+=1;
0001b9 940e 07ec 	CALL SUBOPT_0x1C
0001bb 9631      	ADIW R30,1
                +
0001bc 93e0 0174+STS _sudut_servo + ( 8 ) , R30
0001be 93f0 0175+STS _sudut_servo + ( 8 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,8
                 ; 0000 0077                 if(sudut_servo[4]>180)sudut_servo[4]=0;
0001c0 940e 07f1 	CALL SUBOPT_0x1D
0001c2 3ba5      	CPI  R26,LOW(0xB5)
0001c3 e0e0      	LDI  R30,HIGH(0xB5)
0001c4 07be      	CPC  R27,R30
0001c5 f014      	BRLT _0x2C
0001c6 940e 07f6 	CALL SUBOPT_0x1E
                 ; 0000 0078                 sprintf(tampil,"Servo 5: %3d",sudut_servo[4]);
                 _0x2C:
0001c8 940e 07fd 	CALL SUBOPT_0x1F
0001ca 940e 0806 	CALL SUBOPT_0x20
                 ; 0000 0079                 ocr_servo[4]=sudut2ocr(sudut_servo[4]);
0001cc 940e 080f 	CALL SUBOPT_0x21
                 ; 0000 007A             }
                 ; 0000 007B             if(i==1){
                 _0x2B:
0001ce 940e 071a 	CALL SUBOPT_0x0
0001d0 f4a9      	BRNE _0x2D
                 ; 0000 007C                 sudut_servo[4]-=1;
0001d1 940e 07ec 	CALL SUBOPT_0x1C
0001d3 9731      	SBIW R30,1
                +
0001d4 93e0 0174+STS _sudut_servo + ( 8 ) , R30
0001d6 93f0 0175+STS _sudut_servo + ( 8 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,8
                 ; 0000 007D                 if(sudut_servo[4]<0)sudut_servo[4]=180;
                +
0001d8 91a0 0175+LDS R26 , _sudut_servo + ( 9 )
                 	__GETB2MN _sudut_servo,9
0001da 23aa      	TST  R26
0001db f422      	BRPL _0x2E
                +
0001dc e7e4     +LDI R30 , LOW ( _sudut_servo + ( 8 ) )
0001dd e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 8 ) )
                 	__POINTW1MN _sudut_servo,8
0001de 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 007E                 sprintf(tampil,"Servo 5: %3d",sudut_servo[4]);
                 _0x2E:
0001e0 940e 07fd 	CALL SUBOPT_0x1F
0001e2 940e 0806 	CALL SUBOPT_0x20
                 ; 0000 007F                 ocr_servo[4]=sudut2ocr(sudut_servo[4]);
0001e4 940e 080f 	CALL SUBOPT_0x21
                 ; 0000 0080             }
                 ; 0000 0081             if(i==2){
                 _0x2D:
0001e6 940e 071f 	CALL SUBOPT_0x1
0001e8 f4a9      	BRNE _0x2F
                 ; 0000 0082                 sudut_servo[5]+=1;
0001e9 940e 0816 	CALL SUBOPT_0x22
0001eb 9631      	ADIW R30,1
                +
0001ec 93e0 0176+STS _sudut_servo + ( 10 ) , R30
0001ee 93f0 0177+STS _sudut_servo + ( 10 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,10
                 ; 0000 0083                 if(sudut_servo[5]>180)sudut_servo[5]=0;
0001f0 940e 081b 	CALL SUBOPT_0x23
0001f2 3ba5      	CPI  R26,LOW(0xB5)
0001f3 e0e0      	LDI  R30,HIGH(0xB5)
0001f4 07be      	CPC  R27,R30
0001f5 f014      	BRLT _0x30
0001f6 940e 0820 	CALL SUBOPT_0x24
                 ; 0000 0084                 sprintf(tampil,"Servo 6: %3d",sudut_servo[5]);
                 _0x30:
0001f8 940e 0827 	CALL SUBOPT_0x25
0001fa 940e 0830 	CALL SUBOPT_0x26
                 ; 0000 0085                 ocr_servo[5]=sudut2ocr(sudut_servo[5]);
0001fc 940e 0839 	CALL SUBOPT_0x27
                 ; 0000 0086             }
                 ; 0000 0087             if(i==3){
                 _0x2F:
0001fe 940e 0724 	CALL SUBOPT_0x2
000200 f4a9      	BRNE _0x31
                 ; 0000 0088                 sudut_servo[5]-=1;
000201 940e 0816 	CALL SUBOPT_0x22
000203 9731      	SBIW R30,1
                +
000204 93e0 0176+STS _sudut_servo + ( 10 ) , R30
000206 93f0 0177+STS _sudut_servo + ( 10 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,10
                 ; 0000 0089                 if(sudut_servo[5]<0)sudut_servo[5]=180;
                +
000208 91a0 0177+LDS R26 , _sudut_servo + ( 11 )
                 	__GETB2MN _sudut_servo,11
00020a 23aa      	TST  R26
00020b f422      	BRPL _0x32
                +
00020c e7e6     +LDI R30 , LOW ( _sudut_servo + ( 10 ) )
00020d e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 10 ) )
                 	__POINTW1MN _sudut_servo,10
00020e 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 008A                 sprintf(tampil,"Servo 6: %3d",sudut_servo[5]);
                 _0x32:
000210 940e 0827 	CALL SUBOPT_0x25
000212 940e 0830 	CALL SUBOPT_0x26
                 ; 0000 008B                 ocr_servo[5]=sudut2ocr(sudut_servo[5]);
000214 940e 0839 	CALL SUBOPT_0x27
                 ; 0000 008C             }
                 ; 0000 008D             lcd_puts(tampil);
                 _0x31:
000216 940e 0788 	CALL SUBOPT_0xF
                 ; 0000 008E             lcd_gotoxy(12,0);
                 ; 0000 008F             lcd_putchar(0xDF);
                 ; 0000 0090             delay_ms(100);
                 ; 0000 0091             }
000218 cf9b      	RJMP _0x28
                 _0x2A:
                 ; 0000 0092         }
                 ; 0000 0093         else if(kolom4==0){
000219 c069      	RJMP _0x33
                 _0x27:
00021a 999c      	SBIC 0x13,4
00021b c067      	RJMP _0x34
                 ; 0000 0094             lcd_clear();
00021c 940e 04ea 	CALL _lcd_clear
                 ; 0000 0095             while(kolom4==0){
                 _0x35:
00021e 999c      	SBIC 0x13,4
00021f c063      	RJMP _0x37
                 ; 0000 0096             lcd_gotoxy(0,0);
000220 940e 0729 	CALL SUBOPT_0x3
                 ; 0000 0097             if(i==0){
000222 f4a9      	BRNE _0x38
                 ; 0000 0098                 sudut_servo[6]+=1;
000223 940e 0840 	CALL SUBOPT_0x28
000225 9631      	ADIW R30,1
                +
000226 93e0 0178+STS _sudut_servo + ( 12 ) , R30
000228 93f0 0179+STS _sudut_servo + ( 12 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,12
                 ; 0000 0099                 if(sudut_servo[6]>180)sudut_servo[6]=0;
00022a 940e 0845 	CALL SUBOPT_0x29
00022c 3ba5      	CPI  R26,LOW(0xB5)
00022d e0e0      	LDI  R30,HIGH(0xB5)
00022e 07be      	CPC  R27,R30
00022f f014      	BRLT _0x39
000230 940e 084a 	CALL SUBOPT_0x2A
                 ; 0000 009A                 sprintf(tampil,"Servo 7: %3d",sudut_servo[6]);
                 _0x39:
000232 940e 0851 	CALL SUBOPT_0x2B
000234 940e 085a 	CALL SUBOPT_0x2C
                 ; 0000 009B                 ocr_servo[6]=sudut2ocr(sudut_servo[6]);
000236 940e 0863 	CALL SUBOPT_0x2D
                 ; 0000 009C             }
                 ; 0000 009D             if(i==1){
                 _0x38:
000238 940e 071a 	CALL SUBOPT_0x0
00023a f4a9      	BRNE _0x3A
                 ; 0000 009E                 sudut_servo[6]-=1;
00023b 940e 0840 	CALL SUBOPT_0x28
00023d 9731      	SBIW R30,1
                +
00023e 93e0 0178+STS _sudut_servo + ( 12 ) , R30
000240 93f0 0179+STS _sudut_servo + ( 12 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,12
                 ; 0000 009F                 if(sudut_servo[6]<0)sudut_servo[6]=180;
                +
000242 91a0 0179+LDS R26 , _sudut_servo + ( 13 )
                 	__GETB2MN _sudut_servo,13
000244 23aa      	TST  R26
000245 f422      	BRPL _0x3B
                +
000246 e7e8     +LDI R30 , LOW ( _sudut_servo + ( 12 ) )
000247 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 12 ) )
                 	__POINTW1MN _sudut_servo,12
000248 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 00A0                 sprintf(tampil,"Servo 7: %3d",sudut_servo[6]);
                 _0x3B:
00024a 940e 0851 	CALL SUBOPT_0x2B
00024c 940e 085a 	CALL SUBOPT_0x2C
                 ; 0000 00A1                 ocr_servo[6]=sudut2ocr(sudut_servo[6]);
00024e 940e 0863 	CALL SUBOPT_0x2D
                 ; 0000 00A2             }
                 ; 0000 00A3             if(i==2){
                 _0x3A:
000250 940e 071f 	CALL SUBOPT_0x1
000252 f4a9      	BRNE _0x3C
                 ; 0000 00A4                 sudut_servo[7]+=1;
000253 940e 086a 	CALL SUBOPT_0x2E
000255 9631      	ADIW R30,1
                +
000256 93e0 017a+STS _sudut_servo + ( 14 ) , R30
000258 93f0 017b+STS _sudut_servo + ( 14 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,14
                 ; 0000 00A5                 if(sudut_servo[7]>180)sudut_servo[7]=0;
00025a 940e 086f 	CALL SUBOPT_0x2F
00025c 3ba5      	CPI  R26,LOW(0xB5)
00025d e0e0      	LDI  R30,HIGH(0xB5)
00025e 07be      	CPC  R27,R30
00025f f014      	BRLT _0x3D
000260 940e 0874 	CALL SUBOPT_0x30
                 ; 0000 00A6                 sprintf(tampil,"Servo 8: %3d",sudut_servo[7]);
                 _0x3D:
000262 940e 087b 	CALL SUBOPT_0x31
000264 940e 0884 	CALL SUBOPT_0x32
                 ; 0000 00A7                 ocr_servo[7]=sudut2ocr(sudut_servo[7]);
000266 940e 088d 	CALL SUBOPT_0x33
                 ; 0000 00A8             }
                 ; 0000 00A9             if(i==3){
                 _0x3C:
000268 940e 0724 	CALL SUBOPT_0x2
00026a f4a9      	BRNE _0x3E
                 ; 0000 00AA                 sudut_servo[7]-=1;
00026b 940e 086a 	CALL SUBOPT_0x2E
00026d 9731      	SBIW R30,1
                +
00026e 93e0 017a+STS _sudut_servo + ( 14 ) , R30
000270 93f0 017b+STS _sudut_servo + ( 14 ) + 1 , R31
                 	__PUTW1MN _sudut_servo,14
                 ; 0000 00AB                 if(sudut_servo[7]<0)sudut_servo[7]=180;
                +
000272 91a0 017b+LDS R26 , _sudut_servo + ( 15 )
                 	__GETB2MN _sudut_servo,15
000274 23aa      	TST  R26
000275 f422      	BRPL _0x3F
                +
000276 e7ea     +LDI R30 , LOW ( _sudut_servo + ( 14 ) )
000277 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 14 ) )
                 	__POINTW1MN _sudut_servo,14
000278 940e 0783 	CALL SUBOPT_0xE
                 ; 0000 00AC                 sprintf(tampil,"Servo 8: %3d",sudut_servo[7]);
                 _0x3F:
00027a 940e 087b 	CALL SUBOPT_0x31
00027c 940e 0884 	CALL SUBOPT_0x32
                 ; 0000 00AD                 ocr_servo[7]=sudut2ocr(sudut_servo[7]);
00027e 940e 088d 	CALL SUBOPT_0x33
                 ; 0000 00AE             }
                 ; 0000 00AF             lcd_puts(tampil);
                 _0x3E:
000280 940e 0788 	CALL SUBOPT_0xF
                 ; 0000 00B0             lcd_gotoxy(12,0);
                 ; 0000 00B1             lcd_putchar(0xDF);
                 ; 0000 00B2             delay_ms(100);
                 ; 0000 00B3             }
000282 cf9b      	RJMP _0x35
                 _0x37:
                 ; 0000 00B4         }
                 ; 0000 00B5 //        else{
                 ; 0000 00B6 //            lcd_gotoxy(0,0);
                 ; 0000 00B7 //           lcd_puts("TIDAK TEKAN");
                 ; 0000 00B8 //        }
                 ; 0000 00B9         header_stop=ocr_servo[0]+ocr_servo[1]+ocr_servo[2];
                 _0x34:
                 _0x33:
                 _0x26:
                 _0x19:
000283 940e 0894 	CALL SUBOPT_0x34
000285 91a0 017c 	LDS  R26,_ocr_servo
000287 91b0 017d 	LDS  R27,_ocr_servo+1
000289 0fae      	ADD  R26,R30
00028a 1fbf      	ADC  R27,R31
00028b 940e 0899 	CALL SUBOPT_0x35
00028d 0fea      	ADD  R30,R26
00028e 1ffb      	ADC  R31,R27
00028f 014f      	MOVW R8,R30
                 ; 0000 00BA         header_stop+=ocr_servo[3]+ocr_servo[4]+ocr_servo[5];
                +
000290 91a0 0182+LDS R26 , _ocr_servo + ( 6 )
000292 91b0 0183+LDS R27 , _ocr_servo + ( 6 ) + 1
                 	__GETW2MN _ocr_servo,6
000294 940e 089e 	CALL SUBOPT_0x36
000296 0fae      	ADD  R26,R30
000297 1fbf      	ADC  R27,R31
000298 940e 08a3 	CALL SUBOPT_0x37
00029a 0fea      	ADD  R30,R26
00029b 1ffb      	ADC  R31,R27
                +
00029c 0e8e     +ADD R8 , R30
00029d 1e9f     +ADC R9 , R31
                 	__ADDWRR 8,9,30,31
                 ; 0000 00BB         header_stop+=ocr_servo[6]+ocr_servo[7];
                +
00029e 91a0 0188+LDS R26 , _ocr_servo + ( 12 )
0002a0 91b0 0189+LDS R27 , _ocr_servo + ( 12 ) + 1
                 	__GETW2MN _ocr_servo,12
0002a2 940e 08a8 	CALL SUBOPT_0x38
0002a4 0fea      	ADD  R30,R26
0002a5 1ffb      	ADC  R31,R27
                +
0002a6 0e8e     +ADD R8 , R30
0002a7 1e9f     +ADC R9 , R31
                 	__ADDWRR 8,9,30,31
                 ; 0000 00BC         header_stop=152800-header_stop;
0002a8 eee0      	LDI  R30,LOW(21728)
0002a9 e5f4      	LDI  R31,HIGH(21728)
0002aa 19e8      	SUB  R30,R8
0002ab 09f9      	SBC  R31,R9
0002ac 014f      	MOVW R8,R30
                 ; 0000 00BD         lcd_gotoxy(2,1);
0002ad e0e2      	LDI  R30,LOW(2)
0002ae 93ea      	ST   -Y,R30
0002af e0a1      	LDI  R26,LOW(1)
0002b0 940e 04d9 	CALL _lcd_gotoxy
                 ; 0000 00BE         lcd_puts("Mengirim...");
                +
0002b2 e6a0     +LDI R26 , LOW ( _0x40 + ( 0 ) )
0002b3 e0b1     +LDI R27 , HIGH ( _0x40 + ( 0 ) )
                 	__POINTW2MN _0x40,0
0002b4 940e 0518 	CALL _lcd_puts
                 ; 0000 00BF     }
0002b6 01f5      	MOVW R30,R10
0002b7 9631      	ADIW R30,1
0002b8 015f      	MOVW R10,R30
0002b9 ce0f      	RJMP _0x4
                 _0x5:
                 ; 0000 00C0 }
0002ba 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x40:
000160           	.BYTE 0xC
                 ;
                 ;// Timer1 output compare A interrupt service routine
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void){
                 ; 0000 00C3 interrupt [7] void timer1_compa_isr(void){
                 
                 	.CSEG
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
0002bb 920a      	ST   -Y,R0
0002bc 93aa      	ST   -Y,R26
0002bd 93ea      	ST   -Y,R30
0002be 93fa      	ST   -Y,R31
0002bf b7ef      	IN   R30,SREG
0002c0 93ea      	ST   -Y,R30
                 ; 0000 00C4 switch(waktu_ke){
0002c1 01f6      	MOVW R30,R12
                 ; 0000 00C5     case 0:
0002c2 9730      	SBIW R30,0
0002c3 f489      	BRNE _0x44
                 ; 0000 00C6         OCR1AH=header_stop>>8;
0002c4 2de9      	MOV  R30,R9
0002c5 70f0      	ANDI R31,HIGH(0x0)
0002c6 bdeb      	OUT  0x2B,R30
                 ; 0000 00C7         OCR1AL=header_stop && 0xFF;
0002c7 2c08      	MOV  R0,R8
0002c8 2809      	OR   R0,R9
0002c9 f029      	BREQ _0x45
0002ca efef      	LDI  R30,LOW(255)
0002cb 30e0      	CPI  R30,0
0002cc f011      	BREQ _0x45
0002cd e0e1      	LDI  R30,1
0002ce c001      	RJMP _0x46
                 _0x45:
0002cf e0e0      	LDI  R30,0
                 _0x46:
0002d0 bdea      	OUT  0x2A,R30
                 ; 0000 00C8         waktu_ke=1;
0002d1 e0e1      	LDI  R30,LOW(1)
0002d2 e0f0      	LDI  R31,HIGH(1)
0002d3 016f      	MOVW R12,R30
                 ; 0000 00C9         break;
0002d4 c16f      	RJMP _0x43
                 ; 0000 00CA     case 1:
                 _0x44:
0002d5 30e1      	CPI  R30,LOW(0x1)
0002d6 e0a0      	LDI  R26,HIGH(0x1)
0002d7 07fa      	CPC  R31,R26
0002d8 f489      	BRNE _0x47
                 ; 0000 00CB         OCR1AH=header_start >>8;
0002d9 2de7      	MOV  R30,R7
0002da 70f0      	ANDI R31,HIGH(0x0)
0002db bdeb      	OUT  0x2B,R30
                 ; 0000 00CC         OCR1AL=header_start && 0xFF;
0002dc 2c06      	MOV  R0,R6
0002dd 2807      	OR   R0,R7
0002de f029      	BREQ _0x48
0002df efef      	LDI  R30,LOW(255)
0002e0 30e0      	CPI  R30,0
0002e1 f011      	BREQ _0x48
0002e2 e0e1      	LDI  R30,1
0002e3 c001      	RJMP _0x49
                 _0x48:
0002e4 e0e0      	LDI  R30,0
                 _0x49:
0002e5 bdea      	OUT  0x2A,R30
                 ; 0000 00CD         waktu_ke=2;
0002e6 e0e2      	LDI  R30,LOW(2)
0002e7 e0f0      	LDI  R31,HIGH(2)
0002e8 016f      	MOVW R12,R30
                 ; 0000 00CE         break;
0002e9 c15a      	RJMP _0x43
                 ; 0000 00CF     case 2:
                 _0x47:
0002ea 30e2      	CPI  R30,LOW(0x2)
0002eb e0a0      	LDI  R26,HIGH(0x2)
0002ec 07fa      	CPC  R31,R26
0002ed f4c1      	BRNE _0x4A
                 ; 0000 00D0         OCR1AH=ocr_servo[0] >>8;
0002ee 91e0 017c 	LDS  R30,_ocr_servo
0002f0 91f0 017d 	LDS  R31,_ocr_servo+1
0002f2 940e 0a43 	CALL __ASRW8
0002f4 bdeb      	OUT  0x2B,R30
                 ; 0000 00D1         OCR1AL=ocr_servo[0] && 0xFF;
0002f5 91e0 017c 	LDS  R30,_ocr_servo
0002f7 91f0 017d 	LDS  R31,_ocr_servo+1
0002f9 9730      	SBIW R30,0
0002fa f029      	BREQ _0x4B
0002fb efef      	LDI  R30,LOW(255)
0002fc 30e0      	CPI  R30,0
0002fd f011      	BREQ _0x4B
0002fe e0e1      	LDI  R30,1
0002ff c001      	RJMP _0x4C
                 _0x4B:
000300 e0e0      	LDI  R30,0
                 _0x4C:
000301 bdea      	OUT  0x2A,R30
                 ; 0000 00D2         waktu_ke=3;
000302 e0e3      	LDI  R30,LOW(3)
000303 e0f0      	LDI  R31,HIGH(3)
000304 016f      	MOVW R12,R30
                 ; 0000 00D3         break;
000305 c13e      	RJMP _0x43
                 ; 0000 00D4     case 3:
                 _0x4A:
000306 30e3      	CPI  R30,LOW(0x3)
000307 e0a0      	LDI  R26,HIGH(0x3)
000308 07fa      	CPC  R31,R26
000309 f471      	BRNE _0x4D
                 ; 0000 00D5         OCR1AH=waktu_on >>8;
00030a 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 00D6         OCR1AL=waktu_on && 0xFF;
00030c f029      	BREQ _0x4E
00030d efef      	LDI  R30,LOW(255)
00030e 30e0      	CPI  R30,0
00030f f011      	BREQ _0x4E
000310 e0e1      	LDI  R30,1
000311 c001      	RJMP _0x4F
                 _0x4E:
000312 e0e0      	LDI  R30,0
                 _0x4F:
000313 bdea      	OUT  0x2A,R30
                 ; 0000 00D7         waktu_ke=4;
000314 e0e4      	LDI  R30,LOW(4)
000315 e0f0      	LDI  R31,HIGH(4)
000316 016f      	MOVW R12,R30
                 ; 0000 00D8         break;
000317 c12c      	RJMP _0x43
                 ; 0000 00D9     case 4:
                 _0x4D:
000318 30e4      	CPI  R30,LOW(0x4)
000319 e0a0      	LDI  R26,HIGH(0x4)
00031a 07fa      	CPC  R31,R26
00031b f4a1      	BRNE _0x50
                 ; 0000 00DA         OCR1AH=ocr_servo[1] >>8;
00031c 940e 0894 	CALL SUBOPT_0x34
00031e 940e 0a43 	CALL __ASRW8
000320 bdeb      	OUT  0x2B,R30
                 ; 0000 00DB         OCR1AL=ocr_servo[1] && 0xFF;
000321 940e 0894 	CALL SUBOPT_0x34
000323 9730      	SBIW R30,0
000324 f029      	BREQ _0x51
000325 efef      	LDI  R30,LOW(255)
000326 30e0      	CPI  R30,0
000327 f011      	BREQ _0x51
000328 e0e1      	LDI  R30,1
000329 c001      	RJMP _0x52
                 _0x51:
00032a e0e0      	LDI  R30,0
                 _0x52:
00032b bdea      	OUT  0x2A,R30
                 ; 0000 00DC         waktu_ke=5;
00032c e0e5      	LDI  R30,LOW(5)
00032d e0f0      	LDI  R31,HIGH(5)
00032e 016f      	MOVW R12,R30
                 ; 0000 00DD         break;
00032f c114      	RJMP _0x43
                 ; 0000 00DE     case 5:
                 _0x50:
000330 30e5      	CPI  R30,LOW(0x5)
000331 e0a0      	LDI  R26,HIGH(0x5)
000332 07fa      	CPC  R31,R26
000333 f471      	BRNE _0x53
                 ; 0000 00DF         OCR1AH=waktu_on >>8;
000334 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 00E0         OCR1AL=waktu_on && 0xFF;
000336 f029      	BREQ _0x54
000337 efef      	LDI  R30,LOW(255)
000338 30e0      	CPI  R30,0
000339 f011      	BREQ _0x54
00033a e0e1      	LDI  R30,1
00033b c001      	RJMP _0x55
                 _0x54:
00033c e0e0      	LDI  R30,0
                 _0x55:
00033d bdea      	OUT  0x2A,R30
                 ; 0000 00E1         waktu_ke=6;
00033e e0e6      	LDI  R30,LOW(6)
00033f e0f0      	LDI  R31,HIGH(6)
000340 016f      	MOVW R12,R30
                 ; 0000 00E2         break;
000341 c102      	RJMP _0x43
                 ; 0000 00E3     case 6:
                 _0x53:
000342 30e6      	CPI  R30,LOW(0x6)
000343 e0a0      	LDI  R26,HIGH(0x6)
000344 07fa      	CPC  R31,R26
000345 f4a1      	BRNE _0x56
                 ; 0000 00E4         OCR1AH=ocr_servo[2] >>8;
000346 940e 0899 	CALL SUBOPT_0x35
000348 940e 0a43 	CALL __ASRW8
00034a bdeb      	OUT  0x2B,R30
                 ; 0000 00E5         OCR1AL=ocr_servo[2] && 0xFF;
00034b 940e 0899 	CALL SUBOPT_0x35
00034d 9730      	SBIW R30,0
00034e f029      	BREQ _0x57
00034f efef      	LDI  R30,LOW(255)
000350 30e0      	CPI  R30,0
000351 f011      	BREQ _0x57
000352 e0e1      	LDI  R30,1
000353 c001      	RJMP _0x58
                 _0x57:
000354 e0e0      	LDI  R30,0
                 _0x58:
000355 bdea      	OUT  0x2A,R30
                 ; 0000 00E6         waktu_ke=7;
000356 e0e7      	LDI  R30,LOW(7)
000357 e0f0      	LDI  R31,HIGH(7)
000358 016f      	MOVW R12,R30
                 ; 0000 00E7         break;
000359 c0ea      	RJMP _0x43
                 ; 0000 00E8     case 7:
                 _0x56:
00035a 30e7      	CPI  R30,LOW(0x7)
00035b e0a0      	LDI  R26,HIGH(0x7)
00035c 07fa      	CPC  R31,R26
00035d f471      	BRNE _0x59
                 ; 0000 00E9         OCR1AH=waktu_on >>8;
00035e 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 00EA         OCR1AL=waktu_on && 0xFF;
000360 f029      	BREQ _0x5A
000361 efef      	LDI  R30,LOW(255)
000362 30e0      	CPI  R30,0
000363 f011      	BREQ _0x5A
000364 e0e1      	LDI  R30,1
000365 c001      	RJMP _0x5B
                 _0x5A:
000366 e0e0      	LDI  R30,0
                 _0x5B:
000367 bdea      	OUT  0x2A,R30
                 ; 0000 00EB         waktu_ke=8;
000368 e0e8      	LDI  R30,LOW(8)
000369 e0f0      	LDI  R31,HIGH(8)
00036a 016f      	MOVW R12,R30
                 ; 0000 00EC         break;
00036b c0d8      	RJMP _0x43
                 ; 0000 00ED     case 8:
                 _0x59:
00036c 30e8      	CPI  R30,LOW(0x8)
00036d e0a0      	LDI  R26,HIGH(0x8)
00036e 07fa      	CPC  R31,R26
00036f f4c1      	BRNE _0x5C
                 ; 0000 00EE         OCR1AH=ocr_servo[3] >>8;
                +
000370 91e0 0182+LDS R30 , _ocr_servo + ( 6 )
000372 91f0 0183+LDS R31 , _ocr_servo + ( 6 ) + 1
                 	__GETW1MN _ocr_servo,6
000374 940e 0a43 	CALL __ASRW8
000376 bdeb      	OUT  0x2B,R30
                 ; 0000 00EF         OCR1AL=ocr_servo[3] && 0xFF;
                +
000377 91e0 0182+LDS R30 , _ocr_servo + ( 6 )
000379 91f0 0183+LDS R31 , _ocr_servo + ( 6 ) + 1
                 	__GETW1MN _ocr_servo,6
00037b 9730      	SBIW R30,0
00037c f029      	BREQ _0x5D
00037d efef      	LDI  R30,LOW(255)
00037e 30e0      	CPI  R30,0
00037f f011      	BREQ _0x5D
000380 e0e1      	LDI  R30,1
000381 c001      	RJMP _0x5E
                 _0x5D:
000382 e0e0      	LDI  R30,0
                 _0x5E:
000383 bdea      	OUT  0x2A,R30
                 ; 0000 00F0         waktu_ke=9;
000384 e0e9      	LDI  R30,LOW(9)
000385 e0f0      	LDI  R31,HIGH(9)
000386 016f      	MOVW R12,R30
                 ; 0000 00F1         break;
000387 c0bc      	RJMP _0x43
                 ; 0000 00F2     case 9:
                 _0x5C:
000388 30e9      	CPI  R30,LOW(0x9)
000389 e0a0      	LDI  R26,HIGH(0x9)
00038a 07fa      	CPC  R31,R26
00038b f471      	BRNE _0x5F
                 ; 0000 00F3         OCR1AH=waktu_on >>8;
00038c 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 00F4         OCR1AL=waktu_on && 0xFF;
00038e f029      	BREQ _0x60
00038f efef      	LDI  R30,LOW(255)
000390 30e0      	CPI  R30,0
000391 f011      	BREQ _0x60
000392 e0e1      	LDI  R30,1
000393 c001      	RJMP _0x61
                 _0x60:
000394 e0e0      	LDI  R30,0
                 _0x61:
000395 bdea      	OUT  0x2A,R30
                 ; 0000 00F5         waktu_ke=10;
000396 e0ea      	LDI  R30,LOW(10)
000397 e0f0      	LDI  R31,HIGH(10)
000398 016f      	MOVW R12,R30
                 ; 0000 00F6         break;
000399 c0aa      	RJMP _0x43
                 ; 0000 00F7     case 10:
                 _0x5F:
00039a 30ea      	CPI  R30,LOW(0xA)
00039b e0a0      	LDI  R26,HIGH(0xA)
00039c 07fa      	CPC  R31,R26
00039d f4a1      	BRNE _0x62
                 ; 0000 00F8         OCR1AH=ocr_servo[4] >>8;
00039e 940e 089e 	CALL SUBOPT_0x36
0003a0 940e 0a43 	CALL __ASRW8
0003a2 bdeb      	OUT  0x2B,R30
                 ; 0000 00F9         OCR1AL=ocr_servo[4] && 0xFF;
0003a3 940e 089e 	CALL SUBOPT_0x36
0003a5 9730      	SBIW R30,0
0003a6 f029      	BREQ _0x63
0003a7 efef      	LDI  R30,LOW(255)
0003a8 30e0      	CPI  R30,0
0003a9 f011      	BREQ _0x63
0003aa e0e1      	LDI  R30,1
0003ab c001      	RJMP _0x64
                 _0x63:
0003ac e0e0      	LDI  R30,0
                 _0x64:
0003ad bdea      	OUT  0x2A,R30
                 ; 0000 00FA         waktu_ke=11;
0003ae e0eb      	LDI  R30,LOW(11)
0003af e0f0      	LDI  R31,HIGH(11)
0003b0 016f      	MOVW R12,R30
                 ; 0000 00FB         break;
0003b1 c092      	RJMP _0x43
                 ; 0000 00FC     case 11:
                 _0x62:
0003b2 30eb      	CPI  R30,LOW(0xB)
0003b3 e0a0      	LDI  R26,HIGH(0xB)
0003b4 07fa      	CPC  R31,R26
0003b5 f471      	BRNE _0x65
                 ; 0000 00FD         OCR1AH=waktu_on >>8;
0003b6 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 00FE         OCR1AL=waktu_on && 0xFF;
0003b8 f029      	BREQ _0x66
0003b9 efef      	LDI  R30,LOW(255)
0003ba 30e0      	CPI  R30,0
0003bb f011      	BREQ _0x66
0003bc e0e1      	LDI  R30,1
0003bd c001      	RJMP _0x67
                 _0x66:
0003be e0e0      	LDI  R30,0
                 _0x67:
0003bf bdea      	OUT  0x2A,R30
                 ; 0000 00FF         waktu_ke=12;
0003c0 e0ec      	LDI  R30,LOW(12)
0003c1 e0f0      	LDI  R31,HIGH(12)
0003c2 016f      	MOVW R12,R30
                 ; 0000 0100         break;
0003c3 c080      	RJMP _0x43
                 ; 0000 0101     case 12:
                 _0x65:
0003c4 30ec      	CPI  R30,LOW(0xC)
0003c5 e0a0      	LDI  R26,HIGH(0xC)
0003c6 07fa      	CPC  R31,R26
0003c7 f4a1      	BRNE _0x68
                 ; 0000 0102         OCR1AH=ocr_servo[5] >>8;
0003c8 940e 08a3 	CALL SUBOPT_0x37
0003ca 940e 0a43 	CALL __ASRW8
0003cc bdeb      	OUT  0x2B,R30
                 ; 0000 0103         OCR1AL=ocr_servo[5] && 0xFF;
0003cd 940e 08a3 	CALL SUBOPT_0x37
0003cf 9730      	SBIW R30,0
0003d0 f029      	BREQ _0x69
0003d1 efef      	LDI  R30,LOW(255)
0003d2 30e0      	CPI  R30,0
0003d3 f011      	BREQ _0x69
0003d4 e0e1      	LDI  R30,1
0003d5 c001      	RJMP _0x6A
                 _0x69:
0003d6 e0e0      	LDI  R30,0
                 _0x6A:
0003d7 bdea      	OUT  0x2A,R30
                 ; 0000 0104         waktu_ke=13;
0003d8 e0ed      	LDI  R30,LOW(13)
0003d9 e0f0      	LDI  R31,HIGH(13)
0003da 016f      	MOVW R12,R30
                 ; 0000 0105         break;
0003db c068      	RJMP _0x43
                 ; 0000 0106     case 13:
                 _0x68:
0003dc 30ed      	CPI  R30,LOW(0xD)
0003dd e0a0      	LDI  R26,HIGH(0xD)
0003de 07fa      	CPC  R31,R26
0003df f471      	BRNE _0x6B
                 ; 0000 0107         OCR1AH=waktu_on >>8;
0003e0 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 0108         OCR1AL=waktu_on && 0xFF;
0003e2 f029      	BREQ _0x6C
0003e3 efef      	LDI  R30,LOW(255)
0003e4 30e0      	CPI  R30,0
0003e5 f011      	BREQ _0x6C
0003e6 e0e1      	LDI  R30,1
0003e7 c001      	RJMP _0x6D
                 _0x6C:
0003e8 e0e0      	LDI  R30,0
                 _0x6D:
0003e9 bdea      	OUT  0x2A,R30
                 ; 0000 0109         waktu_ke=14;
0003ea e0ee      	LDI  R30,LOW(14)
0003eb e0f0      	LDI  R31,HIGH(14)
0003ec 016f      	MOVW R12,R30
                 ; 0000 010A         break;
0003ed c056      	RJMP _0x43
                 ; 0000 010B     case 14:
                 _0x6B:
0003ee 30ee      	CPI  R30,LOW(0xE)
0003ef e0a0      	LDI  R26,HIGH(0xE)
0003f0 07fa      	CPC  R31,R26
0003f1 f4c1      	BRNE _0x6E
                 ; 0000 010C         OCR1AH=ocr_servo[6] >>8;
                +
0003f2 91e0 0188+LDS R30 , _ocr_servo + ( 12 )
0003f4 91f0 0189+LDS R31 , _ocr_servo + ( 12 ) + 1
                 	__GETW1MN _ocr_servo,12
0003f6 940e 0a43 	CALL __ASRW8
0003f8 bdeb      	OUT  0x2B,R30
                 ; 0000 010D         OCR1AL=ocr_servo[6] && 0xFF;
                +
0003f9 91e0 0188+LDS R30 , _ocr_servo + ( 12 )
0003fb 91f0 0189+LDS R31 , _ocr_servo + ( 12 ) + 1
                 	__GETW1MN _ocr_servo,12
0003fd 9730      	SBIW R30,0
0003fe f029      	BREQ _0x6F
0003ff efef      	LDI  R30,LOW(255)
000400 30e0      	CPI  R30,0
000401 f011      	BREQ _0x6F
000402 e0e1      	LDI  R30,1
000403 c001      	RJMP _0x70
                 _0x6F:
000404 e0e0      	LDI  R30,0
                 _0x70:
000405 bdea      	OUT  0x2A,R30
                 ; 0000 010E         waktu_ke=15;
000406 e0ef      	LDI  R30,LOW(15)
000407 e0f0      	LDI  R31,HIGH(15)
000408 016f      	MOVW R12,R30
                 ; 0000 010F         break;
000409 c03a      	RJMP _0x43
                 ; 0000 0110     case 15:
                 _0x6E:
00040a 30ef      	CPI  R30,LOW(0xF)
00040b e0a0      	LDI  R26,HIGH(0xF)
00040c 07fa      	CPC  R31,R26
00040d f471      	BRNE _0x71
                 ; 0000 0111         OCR1AH=waktu_on>>8;
00040e 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 0112         OCR1AL=waktu_on && 0xFF;
000410 f029      	BREQ _0x72
000411 efef      	LDI  R30,LOW(255)
000412 30e0      	CPI  R30,0
000413 f011      	BREQ _0x72
000414 e0e1      	LDI  R30,1
000415 c001      	RJMP _0x73
                 _0x72:
000416 e0e0      	LDI  R30,0
                 _0x73:
000417 bdea      	OUT  0x2A,R30
                 ; 0000 0113         waktu_ke=16;
000418 e1e0      	LDI  R30,LOW(16)
000419 e0f0      	LDI  R31,HIGH(16)
00041a 016f      	MOVW R12,R30
                 ; 0000 0114         break;
00041b c028      	RJMP _0x43
                 ; 0000 0115     case 16:
                 _0x71:
00041c 31e0      	CPI  R30,LOW(0x10)
00041d e0a0      	LDI  R26,HIGH(0x10)
00041e 07fa      	CPC  R31,R26
00041f f4a1      	BRNE _0x74
                 ; 0000 0116         OCR1AH=ocr_servo[7]>>8;
000420 940e 08a8 	CALL SUBOPT_0x38
000422 940e 0a43 	CALL __ASRW8
000424 bdeb      	OUT  0x2B,R30
                 ; 0000 0117         OCR1AL=ocr_servo[7] && 0xFF;
000425 940e 08a8 	CALL SUBOPT_0x38
000427 9730      	SBIW R30,0
000428 f029      	BREQ _0x75
000429 efef      	LDI  R30,LOW(255)
00042a 30e0      	CPI  R30,0
00042b f011      	BREQ _0x75
00042c e0e1      	LDI  R30,1
00042d c001      	RJMP _0x76
                 _0x75:
00042e e0e0      	LDI  R30,0
                 _0x76:
00042f bdea      	OUT  0x2A,R30
                 ; 0000 0118         waktu_ke=17;
000430 e1e1      	LDI  R30,LOW(17)
000431 e0f0      	LDI  R31,HIGH(17)
000432 016f      	MOVW R12,R30
                 ; 0000 0119         break;
000433 c010      	RJMP _0x43
                 ; 0000 011A     case 17:
                 _0x74:
000434 31e1      	CPI  R30,LOW(0x11)
000435 e0a0      	LDI  R26,HIGH(0x11)
000436 07fa      	CPC  R31,R26
000437 f461      	BRNE _0x43
                 ; 0000 011B         OCR1AH=waktu_on>>8;
000438 940e 08ad 	CALL SUBOPT_0x39
                 ; 0000 011C         OCR1AL=waktu_on && 0xFF;
00043a f029      	BREQ _0x78
00043b efef      	LDI  R30,LOW(255)
00043c 30e0      	CPI  R30,0
00043d f011      	BREQ _0x78
00043e e0e1      	LDI  R30,1
00043f c001      	RJMP _0x79
                 _0x78:
000440 e0e0      	LDI  R30,0
                 _0x79:
000441 bdea      	OUT  0x2A,R30
                 ; 0000 011D         waktu_ke=0;
000442 24cc      	CLR  R12
000443 24dd      	CLR  R13
                 ; 0000 011E         break;
                 ; 0000 011F }
                 _0x43:
                 ; 0000 0120 }
000444 91e9      	LD   R30,Y+
000445 bfef      	OUT  SREG,R30
000446 91f9      	LD   R31,Y+
000447 91e9      	LD   R30,Y+
000448 91a9      	LD   R26,Y+
000449 9009      	LD   R0,Y+
00044a 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0123 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0124 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00044b e0e0      	LDI  R30,LOW(0)
00044c bbea      	OUT  0x1A,R30
                 ; 0000 0125 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00044d bbeb      	OUT  0x1B,R30
                 ; 0000 0126 
                 ; 0000 0127 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00044e bbe7      	OUT  0x17,R30
                 ; 0000 0128 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00044f bbe8      	OUT  0x18,R30
                 ; 0000 0129 
                 ; 0000 012A DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000450 e0ef      	LDI  R30,LOW(15)
000451 bbe4      	OUT  0x14,R30
                 ; 0000 012B PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000452 efe0      	LDI  R30,LOW(240)
000453 bbe5      	OUT  0x15,R30
                 ; 0000 012C 
                 ; 0000 012D DDRD=(0<<DDD7) | (0<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000454 e3e0      	LDI  R30,LOW(48)
000455 bbe1      	OUT  0x11,R30
                 ; 0000 012E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000456 e0e0      	LDI  R30,LOW(0)
000457 bbe2      	OUT  0x12,R30
                 ; 0000 012F 
                 ; 0000 0130 // Timer/Counter 1 initialization
                 ; 0000 0131 // Clock source: System Clock
                 ; 0000 0132 // Clock value: 8000.000 kHz
                 ; 0000 0133 // Mode: Normal top=0xFFFF
                 ; 0000 0134 // OC1A output: Clear on compare match
                 ; 0000 0135 // OC1B output: Clear on compare match
                 ; 0000 0136 // Noise Canceler: Off
                 ; 0000 0137 // Input Capture on Falling Edge
                 ; 0000 0138 // Timer Period: 2 ms
                 ; 0000 0139 // Output Pulse(s):
                 ; 0000 013A // OC1A Period: 2 ms
                 ; 0000 013B // OC1B Period: 2 ms
                 ; 0000 013C // Timer1 Overflow Interrupt: On
                 ; 0000 013D // Input Capture Interrupt: Off
                 ; 0000 013E // Compare A Match Interrupt: Off
                 ; 0000 013F // Compare B Match Interrupt: Off
                 ; 0000 0140 TCCR1A=(0<<COM1A1) | (1<<COM1A0) | (0<<COM1B1) | (1<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000458 e5e0      	LDI  R30,LOW(80)
000459 bdef      	OUT  0x2F,R30
                 ; 0000 0141 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
00045a e0e9      	LDI  R30,LOW(9)
00045b bdee      	OUT  0x2E,R30
                 ; 0000 0142 TCNT1H=0x00;
00045c e0e0      	LDI  R30,LOW(0)
00045d bded      	OUT  0x2D,R30
                 ; 0000 0143 TCNT1L=0x00;
00045e bdec      	OUT  0x2C,R30
                 ; 0000 0144 ICR1H=0x00;
00045f bde7      	OUT  0x27,R30
                 ; 0000 0145 ICR1L=0x00;
000460 bde6      	OUT  0x26,R30
                 ; 0000 0146 OCR1AH=0x00;
000461 bdeb      	OUT  0x2B,R30
                 ; 0000 0147 OCR1AL=0x00;
000462 bdea      	OUT  0x2A,R30
                 ; 0000 0148 OCR1BH=0x3E;
000463 e3ee      	LDI  R30,LOW(62)
000464 bde9      	OUT  0x29,R30
                 ; 0000 0149 OCR1BL=0x80;
000465 e8e0      	LDI  R30,LOW(128)
000466 bde8      	OUT  0x28,R30
                 ; 0000 014A 
                 ; 0000 014B // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 014C TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000467 e1e0      	LDI  R30,LOW(16)
000468 bfe9      	OUT  0x39,R30
                 ; 0000 014D 
                 ; 0000 014E // Analog Comparator initialization
                 ; 0000 014F ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000469 e8e0      	LDI  R30,LOW(128)
00046a b9e8      	OUT  0x8,R30
                 ; 0000 0150 SFIOR=(0<<ACME);
00046b e0e0      	LDI  R30,LOW(0)
00046c bfe0      	OUT  0x30,R30
                 ; 0000 0151 
                 ; 0000 0152 lcd_init(16);
00046d e1a0      	LDI  R26,LOW(16)
00046e d0ba      	RCALL _lcd_init
                 ; 0000 0153 
                 ; 0000 0154 // Global enable interrupts
                 ; 0000 0155 #asm("sei")
00046f 9478      	sei
                 ; 0000 0156 
                 ; 0000 0157 sudut_servo[0]=0;
000470 e0e0      	LDI  R30,LOW(0)
000471 93e0 016c 	STS  _sudut_servo,R30
000473 93e0 016d 	STS  _sudut_servo+1,R30
                 ; 0000 0158 sudut_servo[1]=0;
000475 940e 0763 	CALL SUBOPT_0xA
                 ; 0000 0159 sudut_servo[2]=0;
000477 940e 07a2 	CALL SUBOPT_0x12
                 ; 0000 015A sudut_servo[3]=0;
000479 940e 07cc 	CALL SUBOPT_0x18
                 ; 0000 015B sudut_servo[4]=0;
00047b 940e 07f6 	CALL SUBOPT_0x1E
                 ; 0000 015C sudut_servo[5]=0;
00047d 940e 0820 	CALL SUBOPT_0x24
                 ; 0000 015D sudut_servo[6]=0;
00047f 940e 084a 	CALL SUBOPT_0x2A
                 ; 0000 015E sudut_servo[7]=0;
000481 940e 0874 	CALL SUBOPT_0x30
                 ; 0000 015F 
                 ; 0000 0160 ocr_servo[0]=16000;
000483 e8e0      	LDI  R30,LOW(16000)
000484 e3fe      	LDI  R31,HIGH(16000)
000485 93e0 017c 	STS  _ocr_servo,R30
000487 93f0 017d 	STS  _ocr_servo+1,R31
                 ; 0000 0161 ocr_servo[1]=16000;
                +
000489 e7ee     +LDI R30 , LOW ( _ocr_servo + ( 2 ) )
00048a e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 2 ) )
                 	__POINTW1MN _ocr_servo,2
00048b 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0162 ocr_servo[2]=16000;
                +
00048d e8e0     +LDI R30 , LOW ( _ocr_servo + ( 4 ) )
00048e e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 4 ) )
                 	__POINTW1MN _ocr_servo,4
00048f 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0163 ocr_servo[3]=16000;
                +
000491 e8e2     +LDI R30 , LOW ( _ocr_servo + ( 6 ) )
000492 e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 6 ) )
                 	__POINTW1MN _ocr_servo,6
000493 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0164 ocr_servo[4]=16000;
                +
000495 e8e4     +LDI R30 , LOW ( _ocr_servo + ( 8 ) )
000496 e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 8 ) )
                 	__POINTW1MN _ocr_servo,8
000497 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0165 ocr_servo[5]=16000;
                +
000499 e8e6     +LDI R30 , LOW ( _ocr_servo + ( 10 ) )
00049a e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 10 ) )
                 	__POINTW1MN _ocr_servo,10
00049b 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0166 ocr_servo[6]=16000;
                +
00049d e8e8     +LDI R30 , LOW ( _ocr_servo + ( 12 ) )
00049e e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 12 ) )
                 	__POINTW1MN _ocr_servo,12
00049f 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0167 ocr_servo[7]=16000;
                +
0004a1 e8ea     +LDI R30 , LOW ( _ocr_servo + ( 14 ) )
0004a2 e0f1     +LDI R31 , HIGH ( _ocr_servo + ( 14 ) )
                 	__POINTW1MN _ocr_servo,14
0004a3 940e 08b3 	CALL SUBOPT_0x3A
                 ; 0000 0168 
                 ; 0000 0169 while (1)
                 _0x7A:
                 ; 0000 016A       {
                 ; 0000 016B       input_keypad_loop();
0004a5 dc21      	RCALL _input_keypad_loop
                 ; 0000 016C       }
0004a6 cffe      	RJMP _0x7A
                 ; 0000 016D }
                 _0x7D:
0004a7 cfff      	RJMP _0x7D
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0004a8 93aa      	ST   -Y,R26
0004a9 81e8      	LD   R30,Y
0004aa 71e0      	ANDI R30,LOW(0x10)
0004ab f011      	BREQ _0x2000004
0004ac 9adb      	SBI  0x1B,3
0004ad c001      	RJMP _0x2000005
                 _0x2000004:
0004ae 98db      	CBI  0x1B,3
                 _0x2000005:
0004af 81e8      	LD   R30,Y
0004b0 72e0      	ANDI R30,LOW(0x20)
0004b1 f011      	BREQ _0x2000006
0004b2 9adc      	SBI  0x1B,4
0004b3 c001      	RJMP _0x2000007
                 _0x2000006:
0004b4 98dc      	CBI  0x1B,4
                 _0x2000007:
0004b5 81e8      	LD   R30,Y
0004b6 74e0      	ANDI R30,LOW(0x40)
0004b7 f011      	BREQ _0x2000008
0004b8 9add      	SBI  0x1B,5
0004b9 c001      	RJMP _0x2000009
                 _0x2000008:
0004ba 98dd      	CBI  0x1B,5
                 _0x2000009:
0004bb 81e8      	LD   R30,Y
0004bc 78e0      	ANDI R30,LOW(0x80)
0004bd f011      	BREQ _0x200000A
0004be 9ade      	SBI  0x1B,6
0004bf c001      	RJMP _0x200000B
                 _0x200000A:
0004c0 98de      	CBI  0x1B,6
                 _0x200000B:
                +
0004c1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004c2 958a     +DEC R24
0004c3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004c4 9ada      	SBI  0x1B,2
                +
0004c5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004c6 958a     +DEC R24
0004c7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004c8 98da      	CBI  0x1B,2
                +
0004c9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004ca 958a     +DEC R24
0004cb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004cc c08a      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0004cd 93aa      	ST   -Y,R26
0004ce 81a8      	LD   R26,Y
0004cf dfd8      	RCALL __lcd_write_nibble_G100
0004d0 81e8          ld    r30,y
0004d1 95e2          swap  r30
0004d2 83e8          st    y,r30
0004d3 81a8      	LD   R26,Y
0004d4 dfd3      	RCALL __lcd_write_nibble_G100
                +
0004d5 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0004d6 958a     +DEC R24
0004d7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0004d8 c07e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004d9 93aa      	ST   -Y,R26
0004da 81e8      	LD   R30,Y
0004db e0f0      	LDI  R31,0
0004dc 56e4      	SUBI R30,LOW(-__base_y_G100)
0004dd 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0004de 81e0      	LD   R30,Z
0004df 81a9      	LDD  R26,Y+1
0004e0 0fae      	ADD  R26,R30
0004e1 dfeb      	RCALL __lcd_write_data
0004e2 81e9      	LDD  R30,Y+1
0004e3 93e0 01a0 	STS  __lcd_x,R30
0004e5 81e8      	LD   R30,Y
0004e6 93e0 01a1 	STS  __lcd_y,R30
0004e8 9622      	ADIW R28,2
0004e9 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0004ea e0a2      	LDI  R26,LOW(2)
0004eb 940e 08b8 	CALL SUBOPT_0x3B
0004ed e0ac      	LDI  R26,LOW(12)
0004ee dfde      	RCALL __lcd_write_data
0004ef e0a1      	LDI  R26,LOW(1)
0004f0 940e 08b8 	CALL SUBOPT_0x3B
0004f2 e0e0      	LDI  R30,LOW(0)
0004f3 93e0 01a1 	STS  __lcd_y,R30
0004f5 93e0 01a0 	STS  __lcd_x,R30
0004f7 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0004f8 93aa      	ST   -Y,R26
0004f9 81a8      	LD   R26,Y
0004fa 30aa      	CPI  R26,LOW(0xA)
0004fb f031      	BREQ _0x2000011
0004fc 91e0 01a2 	LDS  R30,__lcd_maxx
0004fe 91a0 01a0 	LDS  R26,__lcd_x
000500 17ae      	CP   R26,R30
000501 f060      	BRLO _0x2000010
                 _0x2000011:
000502 e0e0      	LDI  R30,LOW(0)
000503 93ea      	ST   -Y,R30
000504 91a0 01a1 	LDS  R26,__lcd_y
000506 5faf      	SUBI R26,-LOW(1)
000507 93a0 01a1 	STS  __lcd_y,R26
000509 dfcf      	RCALL _lcd_gotoxy
00050a 81a8      	LD   R26,Y
00050b 30aa      	CPI  R26,LOW(0xA)
00050c f409      	BRNE _0x2000013
00050d c049      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
00050e 91e0 01a0 	LDS  R30,__lcd_x
000510 5fef      	SUBI R30,-LOW(1)
000511 93e0 01a0 	STS  __lcd_x,R30
000513 9ad8      	SBI  0x1B,0
000514 81a8      	LD   R26,Y
000515 dfb7      	RCALL __lcd_write_data
000516 98d8      	CBI  0x1B,0
000517 c03f      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000518 93ba      	ST   -Y,R27
000519 93aa      	ST   -Y,R26
00051a 931a      	ST   -Y,R17
                 _0x2000014:
00051b 81a9      	LDD  R26,Y+1
00051c 81ba      	LDD  R27,Y+1+1
00051d 91ed      	LD   R30,X+
00051e 83a9      	STD  Y+1,R26
00051f 83ba      	STD  Y+1+1,R27
000520 2f1e      	MOV  R17,R30
000521 30e0      	CPI  R30,0
000522 f019      	BREQ _0x2000016
000523 2fa1      	MOV  R26,R17
000524 dfd3      	RCALL _lcd_putchar
000525 cff5      	RJMP _0x2000014
                 _0x2000016:
000526 8118      	LDD  R17,Y+0
000527 9623      	ADIW R28,3
000528 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000529 93aa      	ST   -Y,R26
00052a 9ad3      	SBI  0x1A,3
00052b 9ad4      	SBI  0x1A,4
00052c 9ad5      	SBI  0x1A,5
00052d 9ad6      	SBI  0x1A,6
00052e 9ad2      	SBI  0x1A,2
00052f 9ad0      	SBI  0x1A,0
000530 9ad1      	SBI  0x1A,1
000531 98da      	CBI  0x1B,2
000532 98d8      	CBI  0x1B,0
000533 98d9      	CBI  0x1B,1
000534 81e8      	LD   R30,Y
000535 93e0 01a2 	STS  __lcd_maxx,R30
000537 58e0      	SUBI R30,-LOW(128)
                +
000538 93e0 019e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00053a 81e8      	LD   R30,Y
00053b 54e0      	SUBI R30,-LOW(192)
                +
00053c 93e0 019f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00053e e1a4      	LDI  R26,LOW(20)
00053f e0b0      	LDI  R27,0
000540 940e 08f2 	CALL _delay_ms
000542 940e 08be 	CALL SUBOPT_0x3C
000544 940e 08be 	CALL SUBOPT_0x3C
000546 940e 08be 	CALL SUBOPT_0x3C
000548 e2a0      	LDI  R26,LOW(32)
000549 df5e      	RCALL __lcd_write_nibble_G100
                +
00054a ec88     +LDI R24 , LOW ( 200 )
00054b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00054c 9701     +SBIW R24 , 1
00054d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00054e e2a8      	LDI  R26,LOW(40)
00054f df7d      	RCALL __lcd_write_data
000550 e0a4      	LDI  R26,LOW(4)
000551 df7b      	RCALL __lcd_write_data
000552 e8a5      	LDI  R26,LOW(133)
000553 df79      	RCALL __lcd_write_data
000554 e0a6      	LDI  R26,LOW(6)
000555 df77      	RCALL __lcd_write_data
000556 df93      	RCALL _lcd_clear
                 _0x2080002:
000557 9621      	ADIW R28,1
000558 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000559 93ba      	ST   -Y,R27
00055a 93aa      	ST   -Y,R26
00055b 931a      	ST   -Y,R17
00055c 930a      	ST   -Y,R16
00055d 81aa      	LDD  R26,Y+2
00055e 81bb      	LDD  R27,Y+2+1
00055f 9612      	ADIW R26,2
000560 940e 0a4d 	CALL __GETW1P
000562 9730      	SBIW R30,0
000563 f159      	BREQ _0x2020010
000564 81aa      	LDD  R26,Y+2
000565 81bb      	LDD  R27,Y+2+1
000566 9614      	ADIW R26,4
000567 940e 0a4d 	CALL __GETW1P
000569 018f      	MOVW R16,R30
00056a 9730      	SBIW R30,0
00056b f061      	BREQ _0x2020012
                +
00056c 3002     +CPI R16 , LOW ( 2 )
00056d e0e0     +LDI R30 , HIGH ( 2 )
00056e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00056f f098      	BRLO _0x2020013
000570 01f8      	MOVW R30,R16
000571 9731      	SBIW R30,1
000572 018f      	MOVW R16,R30
                +
000573 81aa     +LDD R26 , Y + 2
000574 81bb     +LDD R27 , Y + 2 + 1
000575 9614     +ADIW R26 , 4
000576 93ed     +ST X + , R30
000577 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000578 81aa      	LDD  R26,Y+2
000579 81bb      	LDD  R27,Y+2+1
00057a 9612      	ADIW R26,2
00057b 91ed      	LD   R30,X+
00057c 91fd      	LD   R31,X+
00057d 9631      	ADIW R30,1
00057e 93fe      	ST   -X,R31
00057f 93ee      	ST   -X,R30
000580 9731      	SBIW R30,1
000581 81ac      	LDD  R26,Y+4
000582 83a0      	STD  Z+0,R26
                 _0x2020013:
000583 81aa      	LDD  R26,Y+2
000584 81bb      	LDD  R27,Y+2+1
000585 940e 0a4d 	CALL __GETW1P
000587 23ff      	TST  R31
000588 f02a      	BRMI _0x2020014
000589 91ed      	LD   R30,X+
00058a 91fd      	LD   R31,X+
00058b 9631      	ADIW R30,1
00058c 93fe      	ST   -X,R31
00058d 93ee      	ST   -X,R30
                 _0x2020014:
00058e c006      	RJMP _0x2020015
                 _0x2020010:
00058f 81aa      	LDD  R26,Y+2
000590 81bb      	LDD  R27,Y+2+1
000591 efef      	LDI  R30,LOW(65535)
000592 efff      	LDI  R31,HIGH(65535)
000593 93ed      	ST   X+,R30
000594 93fc      	ST   X,R31
                 _0x2020015:
000595 8119      	LDD  R17,Y+1
000596 8108      	LDD  R16,Y+0
000597 9625      	ADIW R28,5
000598 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000599 93ba      	ST   -Y,R27
00059a 93aa      	ST   -Y,R26
00059b 9726      	SBIW R28,6
00059c 940e 0a5a 	CALL __SAVELOCR6
00059e e010      	LDI  R17,0
00059f 85ac      	LDD  R26,Y+12
0005a0 85bd      	LDD  R27,Y+12+1
0005a1 e0e0      	LDI  R30,LOW(0)
0005a2 e0f0      	LDI  R31,HIGH(0)
0005a3 93ed      	ST   X+,R30
0005a4 93fc      	ST   X,R31
                 _0x2020016:
0005a5 89ea      	LDD  R30,Y+18
0005a6 89fb      	LDD  R31,Y+18+1
0005a7 9631      	ADIW R30,1
0005a8 8bea      	STD  Y+18,R30
0005a9 8bfb      	STD  Y+18+1,R31
0005aa 9731      	SBIW R30,1
0005ab 91e4      	LPM  R30,Z
0005ac 2f2e      	MOV  R18,R30
0005ad 30e0      	CPI  R30,0
0005ae f409      	BRNE PC+2
0005af c115      	RJMP _0x2020018
0005b0 2fe1      	MOV  R30,R17
0005b1 30e0      	CPI  R30,0
0005b2 f439      	BRNE _0x202001C
0005b3 3225      	CPI  R18,37
0005b4 f411      	BRNE _0x202001D
0005b5 e011      	LDI  R17,LOW(1)
0005b6 c002      	RJMP _0x202001E
                 _0x202001D:
0005b7 940e 08c6 	CALL SUBOPT_0x3D
                 _0x202001E:
0005b9 c10a      	RJMP _0x202001B
                 _0x202001C:
0005ba 30e1      	CPI  R30,LOW(0x1)
0005bb f4a9      	BRNE _0x202001F
0005bc 3225      	CPI  R18,37
0005bd f419      	BRNE _0x2020020
0005be 940e 08c6 	CALL SUBOPT_0x3D
0005c0 c102      	RJMP _0x20200CC
                 _0x2020020:
0005c1 e012      	LDI  R17,LOW(2)
0005c2 e040      	LDI  R20,LOW(0)
0005c3 e000      	LDI  R16,LOW(0)
0005c4 322d      	CPI  R18,45
0005c5 f411      	BRNE _0x2020021
0005c6 e001      	LDI  R16,LOW(1)
0005c7 c0fc      	RJMP _0x202001B
                 _0x2020021:
0005c8 322b      	CPI  R18,43
0005c9 f411      	BRNE _0x2020022
0005ca e24b      	LDI  R20,LOW(43)
0005cb c0f8      	RJMP _0x202001B
                 _0x2020022:
0005cc 3220      	CPI  R18,32
0005cd f411      	BRNE _0x2020023
0005ce e240      	LDI  R20,LOW(32)
0005cf c0f4      	RJMP _0x202001B
                 _0x2020023:
0005d0 c002      	RJMP _0x2020024
                 _0x202001F:
0005d1 30e2      	CPI  R30,LOW(0x2)
0005d2 f439      	BRNE _0x2020025
                 _0x2020024:
0005d3 e050      	LDI  R21,LOW(0)
0005d4 e013      	LDI  R17,LOW(3)
0005d5 3320      	CPI  R18,48
0005d6 f411      	BRNE _0x2020026
0005d7 6800      	ORI  R16,LOW(128)
0005d8 c0eb      	RJMP _0x202001B
                 _0x2020026:
0005d9 c003      	RJMP _0x2020027
                 _0x2020025:
0005da 30e3      	CPI  R30,LOW(0x3)
0005db f009      	BREQ PC+2
0005dc c0e7      	RJMP _0x202001B
                 _0x2020027:
0005dd 3320      	CPI  R18,48
0005de f010      	BRLO _0x202002A
0005df 332a      	CPI  R18,58
0005e0 f008      	BRLO _0x202002B
                 _0x202002A:
0005e1 c007      	RJMP _0x2020029
                 _0x202002B:
0005e2 e0aa      	LDI  R26,LOW(10)
0005e3 9f5a      	MUL  R21,R26
0005e4 2d50      	MOV  R21,R0
0005e5 2fe2      	MOV  R30,R18
0005e6 53e0      	SUBI R30,LOW(48)
0005e7 0f5e      	ADD  R21,R30
0005e8 c0db      	RJMP _0x202001B
                 _0x2020029:
0005e9 2fe2      	MOV  R30,R18
0005ea 36e3      	CPI  R30,LOW(0x63)
0005eb f449      	BRNE _0x202002F
0005ec 940e 08cd 	CALL SUBOPT_0x3E
0005ee 89e8      	LDD  R30,Y+16
0005ef 89f9      	LDD  R31,Y+16+1
0005f0 81a4      	LDD  R26,Z+4
0005f1 93aa      	ST   -Y,R26
0005f2 940e 08d3 	CALL SUBOPT_0x3F
0005f4 c0ce      	RJMP _0x2020030
                 _0x202002F:
0005f5 37e3      	CPI  R30,LOW(0x73)
0005f6 f441      	BRNE _0x2020032
0005f7 940e 08cd 	CALL SUBOPT_0x3E
0005f9 940e 08d9 	CALL SUBOPT_0x40
0005fb 940e 0701 	CALL _strlen
0005fd 2f1e      	MOV  R17,R30
0005fe c00a      	RJMP _0x2020033
                 _0x2020032:
0005ff 37e0      	CPI  R30,LOW(0x70)
000600 f461      	BRNE _0x2020035
000601 940e 08cd 	CALL SUBOPT_0x3E
000603 940e 08d9 	CALL SUBOPT_0x40
000605 940e 070d 	CALL _strlenf
000607 2f1e      	MOV  R17,R30
000608 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000609 6002      	ORI  R16,LOW(2)
00060a 770f      	ANDI R16,LOW(127)
00060b e030      	LDI  R19,LOW(0)
00060c c034      	RJMP _0x2020036
                 _0x2020035:
00060d 36e4      	CPI  R30,LOW(0x64)
00060e f011      	BREQ _0x2020039
00060f 36e9      	CPI  R30,LOW(0x69)
000610 f411      	BRNE _0x202003A
                 _0x2020039:
000611 6004      	ORI  R16,LOW(4)
000612 c002      	RJMP _0x202003B
                 _0x202003A:
000613 37e5      	CPI  R30,LOW(0x75)
000614 f431      	BRNE _0x202003C
                 _0x202003B:
000615 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000616 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000617 83ee      	STD  Y+6,R30
000618 83ff      	STD  Y+6+1,R31
000619 e015      	LDI  R17,LOW(5)
00061a c00c      	RJMP _0x202003D
                 _0x202003C:
00061b 35e8      	CPI  R30,LOW(0x58)
00061c f411      	BRNE _0x202003F
00061d 6008      	ORI  R16,LOW(8)
00061e c003      	RJMP _0x2020040
                 _0x202003F:
00061f 37e8      	CPI  R30,LOW(0x78)
000620 f009      	BREQ PC+2
000621 c0a1      	RJMP _0x2020071
                 _0x2020040:
000622 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000623 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000624 83ee      	STD  Y+6,R30
000625 83ff      	STD  Y+6+1,R31
000626 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000627 ff02      	SBRS R16,2
000628 c014      	RJMP _0x2020042
000629 940e 08cd 	CALL SUBOPT_0x3E
00062b 940e 08e3 	CALL SUBOPT_0x41
00062d 85ab      	LDD  R26,Y+11
00062e 23aa      	TST  R26
00062f f43a      	BRPL _0x2020043
000630 85ea      	LDD  R30,Y+10
000631 85fb      	LDD  R31,Y+10+1
000632 940e 0a37 	CALL __ANEGW1
000634 87ea      	STD  Y+10,R30
000635 87fb      	STD  Y+10+1,R31
000636 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000637 3040      	CPI  R20,0
000638 f011      	BREQ _0x2020044
000639 5f1f      	SUBI R17,-LOW(1)
00063a c001      	RJMP _0x2020045
                 _0x2020044:
00063b 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00063c c004      	RJMP _0x2020046
                 _0x2020042:
00063d 940e 08cd 	CALL SUBOPT_0x3E
00063f 940e 08e3 	CALL SUBOPT_0x41
                 _0x2020046:
                 _0x2020036:
000641 fd00      	SBRC R16,0
000642 c011      	RJMP _0x2020047
                 _0x2020048:
000643 1715      	CP   R17,R21
000644 f478      	BRSH _0x202004A
000645 ff07      	SBRS R16,7
000646 c008      	RJMP _0x202004B
000647 ff02      	SBRS R16,2
000648 c004      	RJMP _0x202004C
000649 7f0b      	ANDI R16,LOW(251)
00064a 2f24      	MOV  R18,R20
00064b 5011      	SUBI R17,LOW(1)
00064c c001      	RJMP _0x202004D
                 _0x202004C:
00064d e320      	LDI  R18,LOW(48)
                 _0x202004D:
00064e c001      	RJMP _0x202004E
                 _0x202004B:
00064f e220      	LDI  R18,LOW(32)
                 _0x202004E:
000650 940e 08c6 	CALL SUBOPT_0x3D
000652 5051      	SUBI R21,LOW(1)
000653 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000654 2f31      	MOV  R19,R17
000655 ff01      	SBRS R16,1
000656 c017      	RJMP _0x202004F
                 _0x2020050:
000657 3030      	CPI  R19,0
000658 f0a1      	BREQ _0x2020052
000659 ff03      	SBRS R16,3
00065a c006      	RJMP _0x2020053
00065b 81ee      	LDD  R30,Y+6
00065c 81ff      	LDD  R31,Y+6+1
00065d 9125      	LPM  R18,Z+
00065e 83ee      	STD  Y+6,R30
00065f 83ff      	STD  Y+6+1,R31
000660 c005      	RJMP _0x2020054
                 _0x2020053:
000661 81ae      	LDD  R26,Y+6
000662 81bf      	LDD  R27,Y+6+1
000663 912d      	LD   R18,X+
000664 83ae      	STD  Y+6,R26
000665 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000666 940e 08c6 	CALL SUBOPT_0x3D
000668 3050      	CPI  R21,0
000669 f009      	BREQ _0x2020055
00066a 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00066b 5031      	SUBI R19,LOW(1)
00066c cfea      	RJMP _0x2020050
                 _0x2020052:
00066d c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00066e e320      	LDI  R18,LOW(48)
00066f 81ee      	LDD  R30,Y+6
000670 81ff      	LDD  R31,Y+6+1
000671 940e 0a51 	CALL __GETW1PF
000673 87e8      	STD  Y+8,R30
000674 87f9      	STD  Y+8+1,R31
000675 81ee      	LDD  R30,Y+6
000676 81ff      	LDD  R31,Y+6+1
000677 9632      	ADIW R30,2
000678 83ee      	STD  Y+6,R30
000679 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00067a 85e8      	LDD  R30,Y+8
00067b 85f9      	LDD  R31,Y+8+1
00067c 85aa      	LDD  R26,Y+10
00067d 85bb      	LDD  R27,Y+10+1
00067e 17ae      	CP   R26,R30
00067f 07bf      	CPC  R27,R31
000680 f050      	BRLO _0x202005C
000681 5f2f      	SUBI R18,-LOW(1)
000682 85a8      	LDD  R26,Y+8
000683 85b9      	LDD  R27,Y+8+1
000684 85ea      	LDD  R30,Y+10
000685 85fb      	LDD  R31,Y+10+1
000686 1bea      	SUB  R30,R26
000687 0bfb      	SBC  R31,R27
000688 87ea      	STD  Y+10,R30
000689 87fb      	STD  Y+10+1,R31
00068a cfef      	RJMP _0x202005A
                 _0x202005C:
00068b 332a      	CPI  R18,58
00068c f028      	BRLO _0x202005D
00068d ff03      	SBRS R16,3
00068e c002      	RJMP _0x202005E
00068f 5f29      	SUBI R18,-LOW(7)
000690 c001      	RJMP _0x202005F
                 _0x202005E:
000691 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000692 fd04      	SBRC R16,4
000693 c01a      	RJMP _0x2020061
000694 3321      	CPI  R18,49
000695 f420      	BRSH _0x2020063
000696 85a8      	LDD  R26,Y+8
000697 85b9      	LDD  R27,Y+8+1
000698 9711      	SBIW R26,1
000699 f409      	BRNE _0x2020062
                 _0x2020063:
00069a c009      	RJMP _0x20200CD
                 _0x2020062:
00069b 1753      	CP   R21,R19
00069c f010      	BRLO _0x2020067
00069d ff00      	SBRS R16,0
00069e c001      	RJMP _0x2020068
                 _0x2020067:
00069f c013      	RJMP _0x2020066
                 _0x2020068:
0006a0 e220      	LDI  R18,LOW(32)
0006a1 ff07      	SBRS R16,7
0006a2 c00b      	RJMP _0x2020069
0006a3 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0006a4 6100      	ORI  R16,LOW(16)
0006a5 ff02      	SBRS R16,2
0006a6 c007      	RJMP _0x202006A
0006a7 7f0b      	ANDI R16,LOW(251)
0006a8 934a      	ST   -Y,R20
0006a9 940e 08d3 	CALL SUBOPT_0x3F
0006ab 3050      	CPI  R21,0
0006ac f009      	BREQ _0x202006B
0006ad 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0006ae 940e 08c6 	CALL SUBOPT_0x3D
0006b0 3050      	CPI  R21,0
0006b1 f009      	BREQ _0x202006C
0006b2 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0006b3 5031      	SUBI R19,LOW(1)
0006b4 85a8      	LDD  R26,Y+8
0006b5 85b9      	LDD  R27,Y+8+1
0006b6 9712      	SBIW R26,2
0006b7 f008      	BRLO _0x2020059
0006b8 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0006b9 ff00      	SBRS R16,0
0006ba c008      	RJMP _0x202006D
                 _0x202006E:
0006bb 3050      	CPI  R21,0
0006bc f031      	BREQ _0x2020070
0006bd 5051      	SUBI R21,LOW(1)
0006be e2e0      	LDI  R30,LOW(32)
0006bf 93ea      	ST   -Y,R30
0006c0 940e 08d3 	CALL SUBOPT_0x3F
0006c2 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0006c3 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0006c4 cee0      	RJMP _0x2020016
                 _0x2020018:
0006c5 85ac      	LDD  R26,Y+12
0006c6 85bd      	LDD  R27,Y+12+1
0006c7 940e 0a4d 	CALL __GETW1P
0006c9 940e 0a61 	CALL __LOADLOCR6
0006cb 9664      	ADIW R28,20
0006cc 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0006cd 92ff      	PUSH R15
0006ce 2ef8      	MOV  R15,R24
0006cf 9726      	SBIW R28,6
0006d0 940e 0a5c 	CALL __SAVELOCR4
0006d2 940e 08eb 	CALL SUBOPT_0x42
0006d4 9730      	SBIW R30,0
0006d5 f419      	BRNE _0x2020072
0006d6 efef      	LDI  R30,LOW(65535)
0006d7 efff      	LDI  R31,HIGH(65535)
0006d8 c023      	RJMP _0x2080001
                 _0x2020072:
0006d9 01de      	MOVW R26,R28
0006da 9616      	ADIW R26,6
0006db 940e 0a33 	CALL __ADDW2R15
0006dd 018d      	MOVW R16,R26
0006de 940e 08eb 	CALL SUBOPT_0x42
0006e0 83ee      	STD  Y+6,R30
0006e1 83ff      	STD  Y+6+1,R31
0006e2 e0e0      	LDI  R30,LOW(0)
0006e3 87e8      	STD  Y+8,R30
0006e4 87e9      	STD  Y+8+1,R30
0006e5 01de      	MOVW R26,R28
0006e6 961a      	ADIW R26,10
0006e7 940e 0a33 	CALL __ADDW2R15
0006e9 940e 0a4d 	CALL __GETW1P
0006eb 93fa      	ST   -Y,R31
0006ec 93ea      	ST   -Y,R30
0006ed 931a      	ST   -Y,R17
0006ee 930a      	ST   -Y,R16
0006ef e5e9      	LDI  R30,LOW(_put_buff_G101)
0006f0 e0f5      	LDI  R31,HIGH(_put_buff_G101)
0006f1 93fa      	ST   -Y,R31
0006f2 93ea      	ST   -Y,R30
0006f3 01de      	MOVW R26,R28
0006f4 961a      	ADIW R26,10
0006f5 dea3      	RCALL __print_G101
0006f6 019f      	MOVW R18,R30
0006f7 81ae      	LDD  R26,Y+6
0006f8 81bf      	LDD  R27,Y+6+1
0006f9 e0e0      	LDI  R30,LOW(0)
0006fa 93ec      	ST   X,R30
0006fb 01f9      	MOVW R30,R18
                 _0x2080001:
0006fc 940e 0a63 	CALL __LOADLOCR4
0006fe 962a      	ADIW R28,10
0006ff 90ff      	POP  R15
000700 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000701 93ba      	ST   -Y,R27
000702 93aa      	ST   -Y,R26
000703 91a9          ld   r26,y+
000704 91b9          ld   r27,y+
000705 27ee          clr  r30
000706 27ff          clr  r31
                 strlen0:
000707 916d          ld   r22,x+
000708 2366          tst  r22
000709 f011          breq strlen1
00070a 9631          adiw r30,1
00070b cffb          rjmp strlen0
                 strlen1:
00070c 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00070d 93ba      	ST   -Y,R27
00070e 93aa      	ST   -Y,R26
00070f 27aa          clr  r26
000710 27bb          clr  r27
000711 91e9          ld   r30,y+
000712 91f9          ld   r31,y+
                 strlenf0:
000713 9005      	lpm  r0,z+
000714 2000          tst  r0
000715 f011          breq strlenf1
000716 9611          adiw r26,1
000717 cffb          rjmp strlenf0
                 strlenf1:
000718 01fd          movw r30,r26
000719 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _sudut_servo:
00016c           	.BYTE 0x10
                 _ocr_servo:
00017c           	.BYTE 0x10
                 _tampil:
00018c           	.BYTE 0x10
                 __base_y_G100:
00019c           	.BYTE 0x4
                 __lcd_x:
0001a0           	.BYTE 0x1
                 __lcd_y:
0001a1           	.BYTE 0x1
                 __lcd_maxx:
0001a2           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
00071a e0e1      	LDI  R30,LOW(1)
00071b e0f0      	LDI  R31,HIGH(1)
00071c 15ea      	CP   R30,R10
00071d 05fb      	CPC  R31,R11
00071e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
00071f e0e2      	LDI  R30,LOW(2)
000720 e0f0      	LDI  R31,HIGH(2)
000721 15ea      	CP   R30,R10
000722 05fb      	CPC  R31,R11
000723 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
000724 e0e3      	LDI  R30,LOW(3)
000725 e0f0      	LDI  R31,HIGH(3)
000726 15ea      	CP   R30,R10
000727 05fb      	CPC  R31,R11
000728 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x3:
000729 e0e0      	LDI  R30,LOW(0)
00072a 93ea      	ST   -Y,R30
00072b e0a0      	LDI  R26,LOW(0)
00072c 940e 04d9 	CALL _lcd_gotoxy
00072e 2c0a      	MOV  R0,R10
00072f 280b      	OR   R0,R11
000730 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000731 91e0 016c 	LDS  R30,_sudut_servo
000733 91f0 016d 	LDS  R31,_sudut_servo+1
000735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000736 93e0 016c 	STS  _sudut_servo,R30
000738 93f0 016d 	STS  _sudut_servo+1,R31
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
00073b 91a0 016c 	LDS  R26,_sudut_servo
00073d 91b0 016d 	LDS  R27,_sudut_servo+1
00073f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
000740 e8ec      	LDI  R30,LOW(_tampil)
000741 e0f1      	LDI  R31,HIGH(_tampil)
000742 93fa      	ST   -Y,R31
000743 93ea      	ST   -Y,R30
                +
000744 e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000745 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000746 93fa      	ST   -Y,R31
000747 93ea      	ST   -Y,R30
000748 dfe8      	RCALL SUBOPT_0x4
000749 940e 0a48 	CALL __CWD1
00074b 940e 0a55 	CALL __PUTPARD1
00074d e084      	LDI  R24,4
00074e 940e 06cd 	CALL _sprintf
000750 9628      	ADIW R28,8
000751 dfe9      	RCALL SUBOPT_0x6
000752 940e 00aa 	CALL _sudut2ocr
000754 93e0 017c 	STS  _ocr_servo,R30
000756 93f0 017d 	STS  _ocr_servo+1,R31
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
                +
000759 91e0 016e+LDS R30 , _sudut_servo + ( 2 )
00075b 91f0 016f+LDS R31 , _sudut_servo + ( 2 ) + 1
                 	__GETW1MN _sudut_servo,2
00075d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
00075e 91a0 016e+LDS R26 , _sudut_servo + ( 2 )
000760 91b0 016f+LDS R27 , _sudut_servo + ( 2 ) + 1
                 	__GETW2MN _sudut_servo,2
000762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
000763 e6ee     +LDI R30 , LOW ( _sudut_servo + ( 2 ) )
000764 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 2 ) )
                 	__POINTW1MN _sudut_servo,2
000765 e0a0      	LDI  R26,LOW(0)
000766 e0b0      	LDI  R27,HIGH(0)
000767 83a0      	STD  Z+0,R26
000768 83b1      	STD  Z+1,R27
000769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
00076a e8ec      	LDI  R30,LOW(_tampil)
00076b e0f1      	LDI  R31,HIGH(_tampil)
00076c 93fa      	ST   -Y,R31
00076d 93ea      	ST   -Y,R30
                +
00076e e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
00076f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
000770 93fa      	ST   -Y,R31
000771 93ea      	ST   -Y,R30
000772 cfe6      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000773 940e 0a48 	CALL __CWD1
000775 940e 0a55 	CALL __PUTPARD1
000777 e084      	LDI  R24,4
000778 940e 06cd 	CALL _sprintf
00077a 9628      	ADIW R28,8
00077b cfe2      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00077c 940e 00aa 	CALL _sudut2ocr
                +
00077e 93e0 017e+STS _ocr_servo + ( 2 ) , R30
000780 93f0 017f+STS _ocr_servo + ( 2 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,2
000782 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
000783 eba4      	LDI  R26,LOW(180)
000784 e0b0      	LDI  R27,HIGH(180)
000785 83a0      	STD  Z+0,R26
000786 83b1      	STD  Z+1,R27
000787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xF:
000788 e8ac      	LDI  R26,LOW(_tampil)
000789 e0b1      	LDI  R27,HIGH(_tampil)
00078a 940e 0518 	CALL _lcd_puts
00078c e0ec      	LDI  R30,LOW(12)
00078d 93ea      	ST   -Y,R30
00078e e0a0      	LDI  R26,LOW(0)
00078f 940e 04d9 	CALL _lcd_gotoxy
000791 edaf      	LDI  R26,LOW(223)
000792 940e 04f8 	CALL _lcd_putchar
000794 e6a4      	LDI  R26,LOW(100)
000795 e0b0      	LDI  R27,0
000796 940c 08f2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
000798 91e0 0170+LDS R30 , _sudut_servo + ( 4 )
00079a 91f0 0171+LDS R31 , _sudut_servo + ( 4 ) + 1
                 	__GETW1MN _sudut_servo,4
00079c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
00079d 91a0 0170+LDS R26 , _sudut_servo + ( 4 )
00079f 91b0 0171+LDS R27 , _sudut_servo + ( 4 ) + 1
                 	__GETW2MN _sudut_servo,4
0007a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
                +
0007a2 e7e0     +LDI R30 , LOW ( _sudut_servo + ( 4 ) )
0007a3 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 4 ) )
                 	__POINTW1MN _sudut_servo,4
0007a4 e0a0      	LDI  R26,LOW(0)
0007a5 e0b0      	LDI  R27,HIGH(0)
0007a6 83a0      	STD  Z+0,R26
0007a7 83b1      	STD  Z+1,R27
0007a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
0007a9 e8ec      	LDI  R30,LOW(_tampil)
0007aa e0f1      	LDI  R31,HIGH(_tampil)
0007ab 93fa      	ST   -Y,R31
0007ac 93ea      	ST   -Y,R30
                +
0007ad e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 26 ) )
0007ae e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 26 ) )
                 	__POINTW1FN _0x0,26
0007af 93fa      	ST   -Y,R31
0007b0 93ea      	ST   -Y,R30
0007b1 cfe6      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
0007b2 940e 0a48 	CALL __CWD1
0007b4 940e 0a55 	CALL __PUTPARD1
0007b6 e084      	LDI  R24,4
0007b7 940e 06cd 	CALL _sprintf
0007b9 9628      	ADIW R28,8
0007ba cfe2      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
0007bb 940e 00aa 	CALL _sudut2ocr
                +
0007bd 93e0 0180+STS _ocr_servo + ( 4 ) , R30
0007bf 93f0 0181+STS _ocr_servo + ( 4 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,4
0007c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
                +
0007c2 91e0 0172+LDS R30 , _sudut_servo + ( 6 )
0007c4 91f0 0173+LDS R31 , _sudut_servo + ( 6 ) + 1
                 	__GETW1MN _sudut_servo,6
0007c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
0007c7 91a0 0172+LDS R26 , _sudut_servo + ( 6 )
0007c9 91b0 0173+LDS R27 , _sudut_servo + ( 6 ) + 1
                 	__GETW2MN _sudut_servo,6
0007cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
                +
0007cc e7e2     +LDI R30 , LOW ( _sudut_servo + ( 6 ) )
0007cd e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 6 ) )
                 	__POINTW1MN _sudut_servo,6
0007ce e0a0      	LDI  R26,LOW(0)
0007cf e0b0      	LDI  R27,HIGH(0)
0007d0 83a0      	STD  Z+0,R26
0007d1 83b1      	STD  Z+1,R27
0007d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
0007d3 e8ec      	LDI  R30,LOW(_tampil)
0007d4 e0f1      	LDI  R31,HIGH(_tampil)
0007d5 93fa      	ST   -Y,R31
0007d6 93ea      	ST   -Y,R30
                +
0007d7 e9e1     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
0007d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
0007d9 93fa      	ST   -Y,R31
0007da 93ea      	ST   -Y,R30
0007db cfe6      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
0007dc 940e 0a48 	CALL __CWD1
0007de 940e 0a55 	CALL __PUTPARD1
0007e0 e084      	LDI  R24,4
0007e1 940e 06cd 	CALL _sprintf
0007e3 9628      	ADIW R28,8
0007e4 cfe2      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0007e5 940e 00aa 	CALL _sudut2ocr
                +
0007e7 93e0 0182+STS _ocr_servo + ( 6 ) , R30
0007e9 93f0 0183+STS _ocr_servo + ( 6 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,6
0007eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
0007ec 91e0 0174+LDS R30 , _sudut_servo + ( 8 )
0007ee 91f0 0175+LDS R31 , _sudut_servo + ( 8 ) + 1
                 	__GETW1MN _sudut_servo,8
0007f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
                +
0007f1 91a0 0174+LDS R26 , _sudut_servo + ( 8 )
0007f3 91b0 0175+LDS R27 , _sudut_servo + ( 8 ) + 1
                 	__GETW2MN _sudut_servo,8
0007f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
                +
0007f6 e7e4     +LDI R30 , LOW ( _sudut_servo + ( 8 ) )
0007f7 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 8 ) )
                 	__POINTW1MN _sudut_servo,8
0007f8 e0a0      	LDI  R26,LOW(0)
0007f9 e0b0      	LDI  R27,HIGH(0)
0007fa 83a0      	STD  Z+0,R26
0007fb 83b1      	STD  Z+1,R27
0007fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
0007fd e8ec      	LDI  R30,LOW(_tampil)
0007fe e0f1      	LDI  R31,HIGH(_tampil)
0007ff 93fa      	ST   -Y,R31
000800 93ea      	ST   -Y,R30
                +
000801 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 52 ) )
000802 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 52 ) )
                 	__POINTW1FN _0x0,52
000803 93fa      	ST   -Y,R31
000804 93ea      	ST   -Y,R30
000805 cfe6      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
000806 940e 0a48 	CALL __CWD1
000808 940e 0a55 	CALL __PUTPARD1
00080a e084      	LDI  R24,4
00080b 940e 06cd 	CALL _sprintf
00080d 9628      	ADIW R28,8
00080e cfe2      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00080f 940e 00aa 	CALL _sudut2ocr
                +
000811 93e0 0184+STS _ocr_servo + ( 8 ) , R30
000813 93f0 0185+STS _ocr_servo + ( 8 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,8
000815 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
000816 91e0 0176+LDS R30 , _sudut_servo + ( 10 )
000818 91f0 0177+LDS R31 , _sudut_servo + ( 10 ) + 1
                 	__GETW1MN _sudut_servo,10
00081a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
00081b 91a0 0176+LDS R26 , _sudut_servo + ( 10 )
00081d 91b0 0177+LDS R27 , _sudut_servo + ( 10 ) + 1
                 	__GETW2MN _sudut_servo,10
00081f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
                +
000820 e7e6     +LDI R30 , LOW ( _sudut_servo + ( 10 ) )
000821 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 10 ) )
                 	__POINTW1MN _sudut_servo,10
000822 e0a0      	LDI  R26,LOW(0)
000823 e0b0      	LDI  R27,HIGH(0)
000824 83a0      	STD  Z+0,R26
000825 83b1      	STD  Z+1,R27
000826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
000827 e8ec      	LDI  R30,LOW(_tampil)
000828 e0f1      	LDI  R31,HIGH(_tampil)
000829 93fa      	ST   -Y,R31
00082a 93ea      	ST   -Y,R30
                +
00082b eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 65 ) )
00082c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 65 ) )
                 	__POINTW1FN _0x0,65
00082d 93fa      	ST   -Y,R31
00082e 93ea      	ST   -Y,R30
00082f cfe6      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
000830 940e 0a48 	CALL __CWD1
000832 940e 0a55 	CALL __PUTPARD1
000834 e084      	LDI  R24,4
000835 940e 06cd 	CALL _sprintf
000837 9628      	ADIW R28,8
000838 cfe2      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000839 940e 00aa 	CALL _sudut2ocr
                +
00083b 93e0 0186+STS _ocr_servo + ( 10 ) , R30
00083d 93f0 0187+STS _ocr_servo + ( 10 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,10
00083f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
                +
000840 91e0 0178+LDS R30 , _sudut_servo + ( 12 )
000842 91f0 0179+LDS R31 , _sudut_servo + ( 12 ) + 1
                 	__GETW1MN _sudut_servo,12
000844 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
                +
000845 91a0 0178+LDS R26 , _sudut_servo + ( 12 )
000847 91b0 0179+LDS R27 , _sudut_servo + ( 12 ) + 1
                 	__GETW2MN _sudut_servo,12
000849 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
                +
00084a e7e8     +LDI R30 , LOW ( _sudut_servo + ( 12 ) )
00084b e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 12 ) )
                 	__POINTW1MN _sudut_servo,12
00084c e0a0      	LDI  R26,LOW(0)
00084d e0b0      	LDI  R27,HIGH(0)
00084e 83a0      	STD  Z+0,R26
00084f 83b1      	STD  Z+1,R27
000850 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
000851 e8ec      	LDI  R30,LOW(_tampil)
000852 e0f1      	LDI  R31,HIGH(_tampil)
000853 93fa      	ST   -Y,R31
000854 93ea      	ST   -Y,R30
                +
000855 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 78 ) )
000856 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 78 ) )
                 	__POINTW1FN _0x0,78
000857 93fa      	ST   -Y,R31
000858 93ea      	ST   -Y,R30
000859 cfe6      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C:
00085a 940e 0a48 	CALL __CWD1
00085c 940e 0a55 	CALL __PUTPARD1
00085e e084      	LDI  R24,4
00085f 940e 06cd 	CALL _sprintf
000861 9628      	ADIW R28,8
000862 cfe2      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
000863 940e 00aa 	CALL _sudut2ocr
                +
000865 93e0 0188+STS _ocr_servo + ( 12 ) , R30
000867 93f0 0189+STS _ocr_servo + ( 12 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,12
000869 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E:
                +
00086a 91e0 017a+LDS R30 , _sudut_servo + ( 14 )
00086c 91f0 017b+LDS R31 , _sudut_servo + ( 14 ) + 1
                 	__GETW1MN _sudut_servo,14
00086e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
                +
00086f 91a0 017a+LDS R26 , _sudut_servo + ( 14 )
000871 91b0 017b+LDS R27 , _sudut_servo + ( 14 ) + 1
                 	__GETW2MN _sudut_servo,14
000873 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
                +
000874 e7ea     +LDI R30 , LOW ( _sudut_servo + ( 14 ) )
000875 e0f1     +LDI R31 , HIGH ( _sudut_servo + ( 14 ) )
                 	__POINTW1MN _sudut_servo,14
000876 e0a0      	LDI  R26,LOW(0)
000877 e0b0      	LDI  R27,HIGH(0)
000878 83a0      	STD  Z+0,R26
000879 83b1      	STD  Z+1,R27
00087a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
00087b e8ec      	LDI  R30,LOW(_tampil)
00087c e0f1      	LDI  R31,HIGH(_tampil)
00087d 93fa      	ST   -Y,R31
00087e 93ea      	ST   -Y,R30
                +
00087f ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 91 ) )
000880 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 91 ) )
                 	__POINTW1FN _0x0,91
000881 93fa      	ST   -Y,R31
000882 93ea      	ST   -Y,R30
000883 cfe6      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32:
000884 940e 0a48 	CALL __CWD1
000886 940e 0a55 	CALL __PUTPARD1
000888 e084      	LDI  R24,4
000889 940e 06cd 	CALL _sprintf
00088b 9628      	ADIW R28,8
00088c cfe2      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
00088d 940e 00aa 	CALL _sudut2ocr
                +
00088f 93e0 018a+STS _ocr_servo + ( 14 ) , R30
000891 93f0 018b+STS _ocr_servo + ( 14 ) + 1 , R31
                 	__PUTW1MN _ocr_servo,14
000893 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
                +
000894 91e0 017e+LDS R30 , _ocr_servo + ( 2 )
000896 91f0 017f+LDS R31 , _ocr_servo + ( 2 ) + 1
                 	__GETW1MN _ocr_servo,2
000898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
                +
000899 91e0 0180+LDS R30 , _ocr_servo + ( 4 )
00089b 91f0 0181+LDS R31 , _ocr_servo + ( 4 ) + 1
                 	__GETW1MN _ocr_servo,4
00089d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
                +
00089e 91e0 0184+LDS R30 , _ocr_servo + ( 8 )
0008a0 91f0 0185+LDS R31 , _ocr_servo + ( 8 ) + 1
                 	__GETW1MN _ocr_servo,8
0008a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
                +
0008a3 91e0 0186+LDS R30 , _ocr_servo + ( 10 )
0008a5 91f0 0187+LDS R31 , _ocr_servo + ( 10 ) + 1
                 	__GETW1MN _ocr_servo,10
0008a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
                +
0008a8 91e0 018a+LDS R30 , _ocr_servo + ( 14 )
0008aa 91f0 018b+LDS R31 , _ocr_servo + ( 14 ) + 1
                 	__GETW1MN _ocr_servo,14
0008ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x39:
0008ad 2de5      	MOV  R30,R5
0008ae 70f0      	ANDI R31,HIGH(0x0)
0008af bdeb      	OUT  0x2B,R30
0008b0 2c04      	MOV  R0,R4
0008b1 2805      	OR   R0,R5
0008b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A:
0008b3 e8a0      	LDI  R26,LOW(16000)
0008b4 e3be      	LDI  R27,HIGH(16000)
0008b5 83a0      	STD  Z+0,R26
0008b6 83b1      	STD  Z+1,R27
0008b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
0008b8 940e 04cd 	CALL __lcd_write_data
0008ba e0a3      	LDI  R26,LOW(3)
0008bb e0b0      	LDI  R27,0
0008bc 940c 08f2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3C:
0008be e3a0      	LDI  R26,LOW(48)
0008bf 940e 04a8 	CALL __lcd_write_nibble_G100
                +
0008c1 ec88     +LDI R24 , LOW ( 200 )
0008c2 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0008c3 9701     +SBIW R24 , 1
0008c4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0008c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3D:
0008c6 932a      	ST   -Y,R18
0008c7 85ad      	LDD  R26,Y+13
0008c8 85be      	LDD  R27,Y+13+1
0008c9 85ef      	LDD  R30,Y+15
0008ca 89f8      	LDD  R31,Y+15+1
0008cb 9509      	ICALL
0008cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E:
0008cd 89e8      	LDD  R30,Y+16
0008ce 89f9      	LDD  R31,Y+16+1
0008cf 9734      	SBIW R30,4
0008d0 8be8      	STD  Y+16,R30
0008d1 8bf9      	STD  Y+16+1,R31
0008d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F:
0008d3 85ad      	LDD  R26,Y+13
0008d4 85be      	LDD  R27,Y+13+1
0008d5 85ef      	LDD  R30,Y+15
0008d6 89f8      	LDD  R31,Y+15+1
0008d7 9509      	ICALL
0008d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x40:
0008d9 89a8      	LDD  R26,Y+16
0008da 89b9      	LDD  R27,Y+16+1
0008db 9614      	ADIW R26,4
0008dc 940e 0a4d 	CALL __GETW1P
0008de 83ee      	STD  Y+6,R30
0008df 83ff      	STD  Y+6+1,R31
0008e0 81ae      	LDD  R26,Y+6
0008e1 81bf      	LDD  R27,Y+6+1
0008e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
0008e3 89a8      	LDD  R26,Y+16
0008e4 89b9      	LDD  R27,Y+16+1
0008e5 9614      	ADIW R26,4
0008e6 940e 0a4d 	CALL __GETW1P
0008e8 87ea      	STD  Y+10,R30
0008e9 87fb      	STD  Y+10+1,R31
0008ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
0008eb 01de      	MOVW R26,R28
0008ec 961c      	ADIW R26,12
0008ed 940e 0a33 	CALL __ADDW2R15
0008ef 940e 0a4d 	CALL __GETW1P
0008f1 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0008f2 9610      	adiw r26,0
0008f3 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0008f4 ed80     +LDI R24 , LOW ( 0x7D0 )
0008f5 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0008f6 9701     +SBIW R24 , 1
0008f7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0008f8 95a8      	wdr
0008f9 9711      	sbiw r26,1
0008fa f7c9      	brne __delay_ms0
                 __delay_ms1:
0008fb 9508      	ret
                 
                 __ROUND_REPACK:
0008fc 2355      	TST  R21
0008fd f442      	BRPL __REPACK
0008fe 3850      	CPI  R21,0x80
0008ff f411      	BRNE __ROUND_REPACK0
000900 ffe0      	SBRS R30,0
000901 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000902 9631      	ADIW R30,1
000903 1f69      	ADC  R22,R25
000904 1f79      	ADC  R23,R25
000905 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000906 e850      	LDI  R21,0x80
000907 2757      	EOR  R21,R23
000908 f411      	BRNE __REPACK0
000909 935f      	PUSH R21
00090a c0c8      	RJMP __ZERORES
                 __REPACK0:
00090b 3f5f      	CPI  R21,0xFF
00090c f031      	BREQ __REPACK1
00090d 0f66      	LSL  R22
00090e 0c00      	LSL  R0
00090f 9557      	ROR  R21
000910 9567      	ROR  R22
000911 2f75      	MOV  R23,R21
000912 9508      	RET
                 __REPACK1:
000913 935f      	PUSH R21
000914 2000      	TST  R0
000915 f00a      	BRMI __REPACK2
000916 c0c8      	RJMP __MAXRES
                 __REPACK2:
000917 c0c1      	RJMP __MINRES
                 
                 __UNPACK:
000918 e850      	LDI  R21,0x80
000919 2e19      	MOV  R1,R25
00091a 2215      	AND  R1,R21
00091b 0f88      	LSL  R24
00091c 1f99      	ROL  R25
00091d 2795      	EOR  R25,R21
00091e 0f55      	LSL  R21
00091f 9587      	ROR  R24
                 
                 __UNPACK1:
000920 e850      	LDI  R21,0x80
000921 2e07      	MOV  R0,R23
000922 2205      	AND  R0,R21
000923 0f66      	LSL  R22
000924 1f77      	ROL  R23
000925 2775      	EOR  R23,R21
000926 0f55      	LSL  R21
000927 9567      	ROR  R22
000928 9508      	RET
                 
                 __CFD1U:
000929 9468      	SET
00092a c001      	RJMP __CFD1U0
                 __CFD1:
00092b 94e8      	CLT
                 __CFD1U0:
00092c 935f      	PUSH R21
00092d dff2      	RCALL __UNPACK1
00092e 3870      	CPI  R23,0x80
00092f f018      	BRLO __CFD10
000930 3f7f      	CPI  R23,0xFF
000931 f408      	BRCC __CFD10
000932 c0a0      	RJMP __ZERORES
                 __CFD10:
000933 e156      	LDI  R21,22
000934 1b57      	SUB  R21,R23
000935 f4aa      	BRPL __CFD11
000936 9551      	NEG  R21
000937 3058      	CPI  R21,8
000938 f40e      	BRTC __CFD19
000939 3059      	CPI  R21,9
                 __CFD19:
00093a f030      	BRLO __CFD17
00093b efef      	SER  R30
00093c efff      	SER  R31
00093d ef6f      	SER  R22
00093e e77f      	LDI  R23,0x7F
00093f f977      	BLD  R23,7
000940 c01a      	RJMP __CFD15
                 __CFD17:
000941 2777      	CLR  R23
000942 2355      	TST  R21
000943 f0b9      	BREQ __CFD15
                 __CFD18:
000944 0fee      	LSL  R30
000945 1fff      	ROL  R31
000946 1f66      	ROL  R22
000947 1f77      	ROL  R23
000948 955a      	DEC  R21
000949 f7d1      	BRNE __CFD18
00094a c010      	RJMP __CFD15
                 __CFD11:
00094b 2777      	CLR  R23
                 __CFD12:
00094c 3058      	CPI  R21,8
00094d f028      	BRLO __CFD13
00094e 2fef      	MOV  R30,R31
00094f 2ff6      	MOV  R31,R22
000950 2f67      	MOV  R22,R23
000951 5058      	SUBI R21,8
000952 cff9      	RJMP __CFD12
                 __CFD13:
000953 2355      	TST  R21
000954 f031      	BREQ __CFD15
                 __CFD14:
000955 9576      	LSR  R23
000956 9567      	ROR  R22
000957 95f7      	ROR  R31
000958 95e7      	ROR  R30
000959 955a      	DEC  R21
00095a f7d1      	BRNE __CFD14
                 __CFD15:
00095b 2000      	TST  R0
00095c f40a      	BRPL __CFD16
00095d d0dd      	RCALL __ANEGD1
                 __CFD16:
00095e 915f      	POP  R21
00095f 9508      	RET
                 
                 __CDF1U:
000960 9468      	SET
000961 c001      	RJMP __CDF1U0
                 __CDF1:
000962 94e8      	CLT
                 __CDF1U0:
000963 9730      	SBIW R30,0
000964 4060      	SBCI R22,0
000965 4070      	SBCI R23,0
000966 f0b1      	BREQ __CDF10
000967 2400      	CLR  R0
000968 f026      	BRTS __CDF11
000969 2377      	TST  R23
00096a f412      	BRPL __CDF11
00096b 9400      	COM  R0
00096c d0ce      	RCALL __ANEGD1
                 __CDF11:
00096d 2e17      	MOV  R1,R23
00096e e17e      	LDI  R23,30
00096f 2011      	TST  R1
                 __CDF12:
000970 f032      	BRMI __CDF13
000971 957a      	DEC  R23
000972 0fee      	LSL  R30
000973 1fff      	ROL  R31
000974 1f66      	ROL  R22
000975 1c11      	ROL  R1
000976 cff9      	RJMP __CDF12
                 __CDF13:
000977 2fef      	MOV  R30,R31
000978 2ff6      	MOV  R31,R22
000979 2d61      	MOV  R22,R1
00097a 935f      	PUSH R21
00097b df8a      	RCALL __REPACK
00097c 915f      	POP  R21
                 __CDF10:
00097d 9508      	RET
                 
                 __SWAPACC:
00097e 934f      	PUSH R20
00097f 01af      	MOVW R20,R30
000980 01fd      	MOVW R30,R26
000981 01da      	MOVW R26,R20
000982 01ab      	MOVW R20,R22
000983 01bc      	MOVW R22,R24
000984 01ca      	MOVW R24,R20
000985 2d40      	MOV  R20,R0
000986 2c01      	MOV  R0,R1
000987 2e14      	MOV  R1,R20
000988 914f      	POP  R20
000989 9508      	RET
                 
                 __UADD12:
00098a 0fea      	ADD  R30,R26
00098b 1ffb      	ADC  R31,R27
00098c 1f68      	ADC  R22,R24
00098d 9508      	RET
                 
                 __NEGMAN1:
00098e 95e0      	COM  R30
00098f 95f0      	COM  R31
000990 9560      	COM  R22
000991 5fef      	SUBI R30,-1
000992 4fff      	SBCI R31,-1
000993 4f6f      	SBCI R22,-1
000994 9508      	RET
                 
                 __ADDF12:
000995 935f      	PUSH R21
000996 df81      	RCALL __UNPACK
000997 3890      	CPI  R25,0x80
000998 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000999 3870      	CPI  R23,0x80
00099a f121      	BREQ __ADDF128
                 __ADDF121:
00099b 2f57      	MOV  R21,R23
00099c 1b59      	SUB  R21,R25
00099d f12b      	BRVS __ADDF1211
00099e f412      	BRPL __ADDF122
00099f dfde      	RCALL __SWAPACC
0009a0 cffa      	RJMP __ADDF121
                 __ADDF122:
0009a1 3158      	CPI  R21,24
0009a2 f018      	BRLO __ADDF123
0009a3 27aa      	CLR  R26
0009a4 27bb      	CLR  R27
0009a5 2788      	CLR  R24
                 __ADDF123:
0009a6 3058      	CPI  R21,8
0009a7 f028      	BRLO __ADDF124
0009a8 2fab      	MOV  R26,R27
0009a9 2fb8      	MOV  R27,R24
0009aa 2788      	CLR  R24
0009ab 5058      	SUBI R21,8
0009ac cff9      	RJMP __ADDF123
                 __ADDF124:
0009ad 2355      	TST  R21
0009ae f029      	BREQ __ADDF126
                 __ADDF125:
0009af 9586      	LSR  R24
0009b0 95b7      	ROR  R27
0009b1 95a7      	ROR  R26
0009b2 955a      	DEC  R21
0009b3 f7d9      	BRNE __ADDF125
                 __ADDF126:
0009b4 2d50      	MOV  R21,R0
0009b5 2551      	EOR  R21,R1
0009b6 f072      	BRMI __ADDF127
0009b7 dfd2      	RCALL __UADD12
0009b8 f438      	BRCC __ADDF129
0009b9 9567      	ROR  R22
0009ba 95f7      	ROR  R31
0009bb 95e7      	ROR  R30
0009bc 9573      	INC  R23
0009bd f413      	BRVC __ADDF129
0009be c020      	RJMP __MAXRES
                 __ADDF128:
0009bf dfbe      	RCALL __SWAPACC
                 __ADDF129:
0009c0 df45      	RCALL __REPACK
0009c1 915f      	POP  R21
0009c2 9508      	RET
                 __ADDF1211:
0009c3 f7d8      	BRCC __ADDF128
0009c4 cffb      	RJMP __ADDF129
                 __ADDF127:
0009c5 1bea      	SUB  R30,R26
0009c6 0bfb      	SBC  R31,R27
0009c7 0b68      	SBC  R22,R24
0009c8 f051      	BREQ __ZERORES
0009c9 f410      	BRCC __ADDF1210
0009ca 9400      	COM  R0
0009cb dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
0009cc 2366      	TST  R22
0009cd f392      	BRMI __ADDF129
0009ce 0fee      	LSL  R30
0009cf 1fff      	ROL  R31
0009d0 1f66      	ROL  R22
0009d1 957a      	DEC  R23
0009d2 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0009d3 27ee      	CLR  R30
0009d4 27ff      	CLR  R31
0009d5 2766      	CLR  R22
0009d6 2777      	CLR  R23
0009d7 915f      	POP  R21
0009d8 9508      	RET
                 
                 __MINRES:
0009d9 efef      	SER  R30
0009da efff      	SER  R31
0009db e76f      	LDI  R22,0x7F
0009dc ef7f      	SER  R23
0009dd 915f      	POP  R21
0009de 9508      	RET
                 
                 __MAXRES:
0009df efef      	SER  R30
0009e0 efff      	SER  R31
0009e1 e76f      	LDI  R22,0x7F
0009e2 e77f      	LDI  R23,0x7F
0009e3 915f      	POP  R21
0009e4 9508      	RET
                 
                 __MULF12:
0009e5 935f      	PUSH R21
0009e6 df31      	RCALL __UNPACK
0009e7 3870      	CPI  R23,0x80
0009e8 f351      	BREQ __ZERORES
0009e9 3890      	CPI  R25,0x80
0009ea f341      	BREQ __ZERORES
0009eb 2401      	EOR  R0,R1
0009ec 9408      	SEC
0009ed 1f79      	ADC  R23,R25
0009ee f423      	BRVC __MULF124
0009ef f31c      	BRLT __ZERORES
                 __MULF125:
0009f0 2000      	TST  R0
0009f1 f33a      	BRMI __MINRES
0009f2 cfec      	RJMP __MAXRES
                 __MULF124:
0009f3 920f      	PUSH R0
0009f4 931f      	PUSH R17
0009f5 932f      	PUSH R18
0009f6 933f      	PUSH R19
0009f7 934f      	PUSH R20
0009f8 2711      	CLR  R17
0009f9 2722      	CLR  R18
0009fa 2799      	CLR  R25
0009fb 9f68      	MUL  R22,R24
0009fc 01a0      	MOVW R20,R0
0009fd 9f8f      	MUL  R24,R31
0009fe 2d30      	MOV  R19,R0
0009ff 0d41      	ADD  R20,R1
000a00 1f59      	ADC  R21,R25
000a01 9f6b      	MUL  R22,R27
000a02 0d30      	ADD  R19,R0
000a03 1d41      	ADC  R20,R1
000a04 1f59      	ADC  R21,R25
000a05 9f8e      	MUL  R24,R30
000a06 d027      	RCALL __MULF126
000a07 9fbf      	MUL  R27,R31
000a08 d025      	RCALL __MULF126
000a09 9f6a      	MUL  R22,R26
000a0a d023      	RCALL __MULF126
000a0b 9fbe      	MUL  R27,R30
000a0c d01d      	RCALL __MULF127
000a0d 9faf      	MUL  R26,R31
000a0e d01b      	RCALL __MULF127
000a0f 9fae      	MUL  R26,R30
000a10 0d11      	ADD  R17,R1
000a11 1f29      	ADC  R18,R25
000a12 1f39      	ADC  R19,R25
000a13 1f49      	ADC  R20,R25
000a14 1f59      	ADC  R21,R25
000a15 2fe3      	MOV  R30,R19
000a16 2ff4      	MOV  R31,R20
000a17 2f65      	MOV  R22,R21
000a18 2f52      	MOV  R21,R18
000a19 914f      	POP  R20
000a1a 913f      	POP  R19
000a1b 912f      	POP  R18
000a1c 911f      	POP  R17
000a1d 900f      	POP  R0
000a1e 2366      	TST  R22
000a1f f02a      	BRMI __MULF122
000a20 0f55      	LSL  R21
000a21 1fee      	ROL  R30
000a22 1fff      	ROL  R31
000a23 1f66      	ROL  R22
000a24 c002      	RJMP __MULF123
                 __MULF122:
000a25 9573      	INC  R23
000a26 f24b      	BRVS __MULF125
                 __MULF123:
000a27 ded4      	RCALL __ROUND_REPACK
000a28 915f      	POP  R21
000a29 9508      	RET
                 
                 __MULF127:
000a2a 0d10      	ADD  R17,R0
000a2b 1d21      	ADC  R18,R1
000a2c 1f39      	ADC  R19,R25
000a2d c002      	RJMP __MULF128
                 __MULF126:
000a2e 0d20      	ADD  R18,R0
000a2f 1d31      	ADC  R19,R1
                 __MULF128:
000a30 1f49      	ADC  R20,R25
000a31 1f59      	ADC  R21,R25
000a32 9508      	RET
                 
                 __ADDW2R15:
000a33 2400      	CLR  R0
000a34 0daf      	ADD  R26,R15
000a35 1db0      	ADC  R27,R0
000a36 9508      	RET
                 
                 __ANEGW1:
000a37 95f1      	NEG  R31
000a38 95e1      	NEG  R30
000a39 40f0      	SBCI R31,0
000a3a 9508      	RET
                 
                 __ANEGD1:
000a3b 95f0      	COM  R31
000a3c 9560      	COM  R22
000a3d 9570      	COM  R23
000a3e 95e1      	NEG  R30
000a3f 4fff      	SBCI R31,-1
000a40 4f6f      	SBCI R22,-1
000a41 4f7f      	SBCI R23,-1
000a42 9508      	RET
                 
                 __ASRW8:
000a43 2fef      	MOV  R30,R31
000a44 27ff      	CLR  R31
000a45 fde7      	SBRC R30,7
000a46 efff      	SER  R31
000a47 9508      	RET
                 
                 __CWD1:
000a48 2f6f      	MOV  R22,R31
000a49 0f66      	ADD  R22,R22
000a4a 0b66      	SBC  R22,R22
000a4b 2f76      	MOV  R23,R22
000a4c 9508      	RET
                 
                 __GETW1P:
000a4d 91ed      	LD   R30,X+
000a4e 91fc      	LD   R31,X
000a4f 9711      	SBIW R26,1
000a50 9508      	RET
                 
                 __GETW1PF:
000a51 9005      	LPM  R0,Z+
000a52 91f4      	LPM  R31,Z
000a53 2de0      	MOV  R30,R0
000a54 9508      	RET
                 
                 __PUTPARD1:
000a55 937a      	ST   -Y,R23
000a56 936a      	ST   -Y,R22
000a57 93fa      	ST   -Y,R31
000a58 93ea      	ST   -Y,R30
000a59 9508      	RET
                 
                 __SAVELOCR6:
000a5a 935a      	ST   -Y,R21
                 __SAVELOCR5:
000a5b 934a      	ST   -Y,R20
                 __SAVELOCR4:
000a5c 933a      	ST   -Y,R19
                 __SAVELOCR3:
000a5d 932a      	ST   -Y,R18
                 __SAVELOCR2:
000a5e 931a      	ST   -Y,R17
000a5f 930a      	ST   -Y,R16
000a60 9508      	RET
                 
                 __LOADLOCR6:
000a61 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000a62 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000a63 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000a64 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000a65 8119      	LDD  R17,Y+1
000a66 8108      	LD   R16,Y
000a67 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  43 r1 :  16 r2 :   0 r3 :   0 r4 :   1 r5 :   2 r6 :   1 r7 :   2 
r8 :   6 r9 :   5 r10:   9 r11:   7 r12:  19 r13:   1 r14:   0 r15:   4 
r16:  37 r17:  31 r18:  36 r19:  16 r20:  25 r21:  72 r22:  46 r23:  36 
r24:  45 r25:  26 r26: 211 r27:  93 r28:  22 r29:   1 r30: 555 r31: 238 
x  :  23 y  : 216 z  :  33 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  17 
adiw  :  42 and   :   2 andi  :  11 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  67 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :  10 brmi  :   7 brne  :  73 brpl  :  14 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  : 245 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  28 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   8 
cp    :   8 cpc   :  31 cpi   :  89 cpse  :   0 dec   :  10 des   :   0 
eor   :   5 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   1 inc   :   2 jmp   :  24 ld    :  34 ldd   :  79 ldi   : 354 
lds   :  72 lpm   :  14 lsl   :  10 lsr   :   2 mov   :  46 movw  :  44 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   5 
ori   :   6 out   :  61 pop   :  14 push  :  13 rcall :  35 ret   :  86 
reti  :   1 rjmp  : 150 rol   :  13 ror   :  12 sbc   :   5 sbci  :   9 
sbi   :  13 sbic  :   8 sbis  :   0 sbiw  :  37 sbr   :   0 sbrc  :   3 
sbrs  :  11 sec   :   1 seh   :   0 sei   :   1 sen   :   0 ser   :   9 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  98 std   :  49 sts   :  61 sub   :   5 subi  :  21 swap  :   1 
tst   :  23 wdr   :   1 
Instructions used: 74 out of 116 (63.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0014d0   5168    160   5328   16384  32.5%
[.dseg] 0x000060 0x0001a3      0     67     67    1024   6.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
